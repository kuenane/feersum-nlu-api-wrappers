swagger: "2.0"

info:
  description: This is an HTTP API for Feersum NLU
  version: 2.0.1
  title: Feersum NLU API

host: dev-bernardt.za.prk.hosting:8000
basePath: /nlu/v2
schemes:
- http
- https
  
consumes:
- application/json
produces:
- application/json
  
# Global security (applies to all operations):
securityDefinitions:
   APIKeyHeader:
     type: apiKey
     in: header
     name: AUTH_TOKEN
security:
- APIKeyHeader: []

tags:
- name: text_classifiers
  description: Interface to the text classifier model instances.
- name: word_manifolds
  description: Interface to the word manifold model instances.
- name: intent_classifiers
  description: Interface to the intent classifier model instances.
- name: faq_matchers
  description: Interface to the FAQ matcher/classifier model instances.
- name: date_parsers
  description: Interface to the date parser model instances.
- name: sentiment_detectors
  description: Interface to the sentiment detector model instances.

paths:
###################################
########
## text_classifiers root
########
  /text_classifiers:
    post:
      tags:
      - text_classifiers
      summary: Create a text classifier.
      x-swagger-router-controller: rest_api.flask_server
      operationId: text_classifier_create
      description: Create a new text classifier or load one from the store.
      parameters:
      - $ref: "#/parameters/body_param_create_details"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request
          
    get:
      tags:
      - text_classifiers
      summary: Get list of loaded text classifiers.
      x-swagger-router-controller: rest_api.flask_server
      operationId: text_classifier_get_details_all
      description: Get the list of loaded text classifiers.
      responses:
        200:
          $ref: "#/responses/instance_detail_list"
        400:
          description: bad request

########
## text_classifiers Get details of named instance
########
  /text_classifiers/{instance_name}:
    get:
      tags:
      - text_classifiers
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server
      operationId: text_classifier_get_details
      description: Get the details of the named text classifier instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request

########
## text_classifiers training samples
########
  /text_classifiers/{instance_name}/training_samples:
    post:
      tags:
      - text_classifiers
      summary: Add training samples.
      x-swagger-router-controller: rest_api.flask_server
      operationId: text_classifier_add_training_samples
      description: Add training samples to named text classifier.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_labelled_text_samples"
      responses:
        200:
          $ref: "#/responses/total_samples"        
        400:
          description: bad request
          
    get:
      tags:
      - text_classifiers
      summary: Get training samples.
      x-swagger-router-controller: rest_api.flask_server
      operationId: text_classifier_get_training_samples
      description: Get the training samples of the named text classifier.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labelled_text_samples"        
        400:
          description: bad request

    delete:
      tags:
      - text_classifiers
      summary: Delete training samples.
      x-swagger-router-controller: rest_api.flask_server
      operationId: text_classifier_del_training_samples
      description: Delete the training samples of the named text classifier.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labelled_text_samples"        
        400:
          description: bad request
########
## text_classifiers train
########
  /text_classifiers/{instance_name}/train:
    post:
      tags:
      - text_classifiers
      summary: Train the named text classifier.
      x-swagger-router-controller: rest_api.flask_server
      operationId: text_classifier_train
      description: Train the named text classifier with the training and testing data already provided.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_train_details"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request

########
## text_classifiers retrieve
########
  /text_classifiers/{instance_name}/retrieve:
    post:
      tags:
      - text_classifiers
      summary: Classify text.
      x-swagger-router-controller: rest_api.flask_server
      operationId: text_classifier_retrieve
      description: Classifies the text and returns a probability sorted list of classes.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/scored_labels"
        400:
          description: bad request


###################################
########
## word_manifolds root
########
  /word_manifolds:
    post:
      tags:
      - word_manifolds
      summary: Create a word manifold model.
      x-swagger-router-controller: rest_api.flask_server
      operationId: word_manifold_create
      description: Create a new word manifold model using an input file or load a model from the store.
      parameters:
      - $ref: "#/parameters/body_param_create_details"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request
          
          
###################################
########
## intent_classifiers root
########
  /intent_classifiers:
    post:
      tags:
      - intent_classifiers
      summary: Create an intent classifier.
      x-swagger-router-controller: rest_api.flask_server
      operationId: intent_classifier_create
      description: Create a new intent classifier or load one from the store.
      parameters:
      - $ref: "#/parameters/body_param_create_details"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request
          
    get:
      tags:
      - intent_classifiers
      summary: Get list of loaded intent classifiers.
      x-swagger-router-controller: rest_api.flask_server
      operationId: intent_classifier_get_details_all
      description: Get the list of loaded intent classifiers.
      responses:
        200:
          $ref: "#/responses/instance_detail_list"
        400:
          description: bad request

########
## intent_classifiers Get details of named instance
########
  /intent_classifiers/{instance_name}:
    get:
      tags:
      - intent_classifiers
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server
      operationId: intent_classifier_get_details
      description: Get the details of the named intent classifier instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request

########
## intent_classifiers training samples
########
  /intent_classifiers/{instance_name}/training_samples:
    post:
      tags:
      - intent_classifiers
      summary: Add training samples.
      x-swagger-router-controller: rest_api.flask_server
      operationId: intent_classifier_add_training_samples
      description: Add training samples to named intent classifier.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_labelled_text_samples"
      responses:
        200:
          $ref: "#/responses/total_samples"        
        400:
          description: bad request
          
    get:
      tags:
      - intent_classifiers
      summary: Get training samples.
      x-swagger-router-controller: rest_api.flask_server
      operationId: intent_classifier_get_training_samples
      description: Get the training samples of the named intent classifier.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labelled_text_samples"        
        400:
          description: bad request

    delete:
      tags:
      - intent_classifiers
      summary: Delete training samples.
      x-swagger-router-controller: rest_api.flask_server
      operationId: intent_classifier_del_training_samples
      description: Delete the training samples of the named intent classifier.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labelled_text_samples"        
        400:
          description: bad request
########
## intent_classifiers train
########
  /intent_classifiers/{instance_name}/train:
    post:
      tags:
      - intent_classifiers
      summary: Train the named intent classifier.
      x-swagger-router-controller: rest_api.flask_server
      operationId: intent_classifier_train
      description: Train the named intent classifier with the training and testing data already provided.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_train_details"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request

########
## intent_classifiers retrieve
########
  /intent_classifiers/{instance_name}/retrieve:
    post:
      tags:
      - intent_classifiers
      summary: Classify intent.
      x-swagger-router-controller: rest_api.flask_server
      operationId: intent_classifier_retrieve
      description: Classifies the intent and returns a probability sorted list of classes.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/scored_labels"
        400:
          description: bad request


###################################
########
## FAQ matchers root
########
  /faq_matchers:
    post:
      tags:
      - faq_matchers
      summary: Create an FAQ matcher.
      x-swagger-router-controller: rest_api.flask_server
      operationId: faq_matcher_create
      description: Create a new faq matcher or load one from the store.
      parameters:
      - $ref: "#/parameters/body_param_create_details"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request
          
    get:
      tags:
      - faq_matchers
      summary: Get list of loaded FAQ matchers.
      x-swagger-router-controller: rest_api.flask_server
      operationId: faq_matcher_get_details_all
      description: Get the list of loaded faq matchers.
      responses:
        200:
          $ref: "#/responses/instance_detail_list"
        400:
          description: bad request

########
## faq_matchers Get details of named instance
########
  /faq_matchers/{instance_name}:
    get:
      tags:
      - faq_matchers
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server
      operationId: faq_matcher_get_details
      description: Get the details of the named FAQ matcher instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request

########
## faq_matchers training samples
########
  /faq_matchers/{instance_name}/training_samples:
    post:
      tags:
      - faq_matchers
      summary: Add training samples.
      x-swagger-router-controller: rest_api.flask_server
      operationId: faq_matchers_add_training_samples
      description: Add training samples to named faq matcher.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_labelled_text_samples"
      responses:
        200:
          $ref: "#/responses/total_samples"        
        400:
          description: bad request
          
    get:
      tags:
      - faq_matchers
      summary: Get training samples.
      x-swagger-router-controller: rest_api.flask_server
      operationId: faq_matcher_get_training_samples
      description: Get the training samples of the named faq matcher.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labelled_text_samples"        
        400:
          description: bad request

    delete:
      tags:
      - faq_matchers
      summary: Delete training samples.
      x-swagger-router-controller: rest_api.flask_server
      operationId: faq_matcher_del_training_samples
      description: Delete the training samples of the named FAQ matcher.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labelled_text_samples"        
        400:
          description: bad request
########
## faq_matchers train
########
  /faq_matchers/{instance_name}/train:
    post:
      tags:
      - faq_matchers
      summary: Train the named FAQ matcher.
      x-swagger-router-controller: rest_api.flask_server
      operationId: faq_matcher_train
      description: Train the named FAQ matcher with the training and testing data already provided.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_train_details"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request

########
## faq_matchers retrieve
########
  /faq_matchers/{instance_name}/retrieve:
    post:
      tags:
      - faq_matchers
      summary: Match retrieve and FAQ.
      x-swagger-router-controller: rest_api.flask_server
      operationId: faq_matcher_retrieve
      description: Matchers the FAQ and returns a probability sorted list of answer labels.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/scored_labels"
        400:
          description: bad request


###################################
########
## Extract a list of dates from the text input.
########
  /date_parsers/{instance_name}/retrieve:
    post:
      tags:
      - date_parsers
      summary: Extract dates.
      x-swagger-router-controller: rest_api.flask_server
      operationId: date_parser_retrieve
      description: Parses one or more dates from text.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/date_list"
        400:
          description: bad request


###################################
########
## Detect the sentiment of the text input.
########
  /sentiment_detectors/{instance_name}/retrieve:
    post:
      tags:
      - sentiment_detectors
      summary: Detect sentiment.
      x-swagger-router-controller: rest_api.flask_server
      operationId: sentiment_detector_retrieve
      description: Detect the general sentiment in the input text.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/sentiment"
        400:
          description: bad request
       
          
###################################
# Descriptions of common parameters
###################################
parameters:
  path_param_instance_name:
    in: path
    name: instance_name
    description: The name of the model instance.
    required: true
    type: string
    
  body_param_create_details:
    in: body
    name: create_details
    description: The details of the instance to create.
    required: true
    schema:
      $ref: "#/definitions/create_details"
          
  body_param_labelled_text_samples:
    in: body
    name: labelled_text_samples
    description: List of labelled text samples.
    required: true
    schema:
      $ref: "#/definitions/labelled_text_samples"
    
  body_param_train_details:        
    in: body
    name: train_details
    description: The arguments provided to the train operation.
    required: true
    schema:
      $ref: "#/definitions/train_details"
          
  body_param_text_input:
    in: body
    name: text_input
    description: The input text.
    required: true
    schema:
      $ref: "#/definitions/text_input"


##################################
# Descriptions of common responses
##################################
responses:
  instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/instance_detail"
      
  instance_detail_list:
    description: A list of models' instance details
    schema:
      $ref: "#/definitions/instance_detail_list"
      
  total_samples:
    description: The total number of samples of this type in the model.
    schema:
      $ref: "#/definitions/total_samples"

  labelled_text_samples:
    description: The list of labeled text samples.
    schema:
      $ref: "#/definitions/labelled_text_samples"
      
  scored_labels:
    description: The list of scored and sorted labels.
    schema:
      $ref: "#/definitions/scored_label_list"

  date_list:                  
    description: The list of structured dates.
    schema:
      $ref: "#/definitions/date_list"

  sentiment:                  
    description: The coarse sentiment.
    schema:
      $ref: "#/definitions/sentiment"


####################################
# Descriptions of common definitions
####################################
definitions:
  instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    properties:
      name:
        description: The name of the model instance.
        type: string
      id:
        description: The unique id of a specific version of the model instance.
        type: string
      desc:
        description: A longer description of the model instances purpose in life.
        type: string
      training_accuracy:
        description: The accuracy of the model as measured on the training set. 
        type: number
      training_stamp:
        description: The time when the training operation concluded.
        type: string
      training_cm:
        description: The confusion matrix as measured on the training set. The matrix is expected to be quite sparse so a compact dict of dicts representation is used.
        type: object
        
  instance_detail_list:
    description: A list of models' instance details.
    type: array
    items:
      $ref: "#/definitions/instance_detail"

  create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        type: string
      desc:
        type: string
      input_file:
        type: string
      load_from_store:
        type: boolean
        
  labelled_text_samples:
    description: List of labelled text samples.
    type: array
    items:
      required:
        - text
        - label
      properties:
        text:
          type: string
        label:
          type: string
          
  labeled_word_manifold:  
    description: A labelled (e.g. lang_code labelled) word manifold instance.
    type: object
    required:
    - label
    - word_manifold
    properties:
      label:
        type: string
      word_manifold:
        type: string

  train_details:
    description: The parameters provided to the train operations.
    type: object
    required:
      - immediate_mode
    properties:
      immediate_mode:
        type: boolean
      word_manifold:
        description: |
          The word manifold instance to use for training and later inference. 
          
          Rather use word_manifold_list for supplying a language labelled list of word manifold instances to use in a multi-language system.
        type: string
      word_manifold_list:
        type: array
        items:
          $ref: "#/definitions/labeled_word_manifold"

  total_samples:
    description: The total number of samples of this type now loaded into the model.
    type: object
    required:
    - total_samples
    properties:
      total_samples:
        type: integer

  text_input:     
    description: The text input to be classified, matched or parsed.
    type: object
    required:
    - text
    properties:
      text:
        type: string

  scored_label:  
    description: A class label with an associated probablity.
    type: object
    required:
    - label
    - probability
    properties:
      label:
        type: string
      probability:
        type: number

  scored_label_list:  
    description: A list of scored class labels.
    type: array
    items:
      $ref: "#/definitions/scored_label"
      
  date:
    description: A structured date-time string with a best guess on the specificity/granularity (i.e. hour, day, month)
    type: object
    required:
    - date
    - granularity
    properties:
      date:
        type: string
      granularity:
        type: string
        enum: [second, minute, hour, day, week, month, year]

  date_list:   
    description: A list of structured date-time strings.
    type: array
    items:
      $ref: "#/definitions/date"
      
  sentiment:   
    description: A sentiment value that may range from -1.0 (very UNhappy) to 1.0 (very happy).
    type: object
    required:
    - value
    properties:
      value:
        type: number