swagger: "2.0"

info:
  description: This is the HTTP API for Feersum NLU. See https://github.com/praekelt/feersum-nlu-api-wrappers for examples of how to use the API.
  version: 2.0.24
  title: FeersumNLU API
  contact:
    name: Feersum Engine
    url: https://www.feersum.io
    email: nlu@feersum.io

host: nlu.feersum.io:443

basePath: /nlu/v2

schemes:
  - https

consumes:
- application/json
produces:
- application/json

# Global security (applies to all operations):
securityDefinitions:
   APIKeyHeader_old:
     type: apiKey
     x-apikeyInfoFunc: rest_api.flask_server.controllers.controller_util.api_key_auth
     in: header
     name: AUTH_TOKEN
   APIKeyHeader:
     type: apiKey
     x-apikeyInfoFunc: rest_api.flask_server.controllers.controller_util.api_key_auth
     in: header
     name: X-Auth-Token

security:
- APIKeyHeader_old: []
- APIKeyHeader: []

tags:
- name: dashboard
  description: A service endpoint to get your list of loaded model instances.
  #This end-point my also be used to test if your service is available.
- name: text_classifiers
  description: The API to your Naive Bayes text classifier instances useful for things like classifying phrases into predefined action or intent categories.
- name: word_manifolds
  description: The API to your word embedding model instances. The service is pre-loaded with default word embeddings sufficient for most use cases.
- name: intent_classifiers
  description: The API to your intent classifier model instances used to classify a user's utterance into a predefined action or intent category.
- name: faq_matchers
  description: The API to your FAQ matcher/classifier model instances useful to match a user's question to a list of predefined FAQs.
- name: language_recognisers
  description: The API to your language recogniser model instances. An 'lid_za' input model file is available and trained on all 11 South African languages.
- name: date_parsers
  description: The API to a pre-configured 'generic' date parser.
- name: sentiment_detectors
  description: The API to a pre-configured 'generic' sentiment detector.
- name: regex_entity_extractors
  description: The API to your regular expression entity extractor instances.
- name: person_name_entity_extractors
  description: The API to your person_name entity extractor instances.
- name: duckling_entity_extractors
  description: The API to your duckling entity extractor instances for things like distances, volumes, etc.
- name: sim_word_entity_extractors
  description: The API to your similar/related words entity extractor instances.

paths:
###################################
###################################
########
## dashboard root
########
  /dashboard:
    get:
      tags:
      - dashboard
      summary: Your service dashboard.
      x-swagger-router-controller: rest_api.flask_server.controllers.dashboard_controller
      operationId: dashboard_get_details
      description: Get your list of loaded model instances, the total API hits for each, API version, etc.
      responses:
        200:
          $ref: "#/responses/dashboard_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"
###################################
###################################
########
## text_classifiers root
########
  /text_classifiers:
    post:
      tags:
      - text_classifiers
      summary: Create a text classifier.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_create
      description: Create a new text classifier or reload one from the trash. Returns the details of the new or loaded instance.
      parameters:
      - in: body
        name: create_details
        description: The details of the instance to create.
        required: true
        schema:
          $ref: "#/definitions/text_classifier_create_details"

      responses:
        200:
          $ref: "#/responses/text_classifier_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - text_classifiers
      summary: Get list of loaded text classifiers.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_get_details_all
      description: Get the list of loaded text classifiers.
      responses:
        200:
          $ref: "#/responses/text_classifier_instance_detail_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## text_classifiers Get details of named instance
########
  /text_classifiers/{instance_name}:
    get:
      tags:
      - text_classifiers
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_get_details
      description: Get the details of the named text classifier instance.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/text_classifier_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - text_classifiers
      summary: Delete named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_del
      description: Delete and return the details of the named text classifier instance. Deleted models can be reloaded from the trash with the create operation.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/text_classifier_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## text_classifiers training samples
########
  /text_classifiers/{instance_name}/training_samples:
    post:
      tags:
      - text_classifiers
      summary: Add training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_add_training_samples
      description: Add training samples to named text classifier. Returns the classifier's updated number of training samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/total_samples"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - text_classifiers
      summary: Get training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_get_training_samples
      description: Get the training samples of the named text classifier.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - text_classifiers
      summary: Delete training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_del_training_samples
      description: Delete the listed training samples of the named text classifier. Returns the deleted samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

  /text_classifiers/{instance_name}/training_samples_all:
    delete:
      tags:
      - text_classifiers
      summary: Delete all training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_del_training_samples_all
      description: Delete all training samples of the named text classifier. Returns the deleted samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## text_classifiers testing samples
########
  /text_classifiers/{instance_name}/testing_samples:
    post:
      tags:
      - text_classifiers
      summary: Add testing samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_add_testing_samples
      description: Add testing samples to named text classifier. Returns the classifier's updated number of testing samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/total_samples"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - text_classifiers
      summary: Get testing samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_get_testing_samples
      description: Get the testing samples of the named text classifier.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - text_classifiers
      summary: Delete testing samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_del_testing_samples
      description: Delete the listed testing samples of the named text classifier. Returns the deleted samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

  /text_classifiers/{instance_name}/testing_samples_all:
    delete:
      tags:
      - text_classifiers
      summary: Delete testing samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_del_testing_samples_all
      description: Delete all testing samples of the named text classifier. Returns the deleted samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## text_classifiers train
########
  /text_classifiers/{instance_name}/train:
    post:
      tags:
      - text_classifiers
      summary: Train the named text classifier.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_train
      description: Train the named text classifier with the training and testing data already provided. Returns the details of the model instance.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: train_details
        description: The arguments provided to the train operation.
        required: true
        schema:
          $ref: "#/definitions/train_details"
      responses:
        200:
          $ref: "#/responses/text_classifier_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## text_classifiers model_params
########
  /text_classifiers/{instance_name}/params:
    post:
      tags:
      - text_classifiers
      summary: Set the model parameters of named text classifier.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_set_params
      description: Set the model parameters of named text classifier.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: model_params
        description: The model parameters.
        required: true
        schema:
          $ref: "#/definitions/model_params"
      responses:
        200:
          $ref: "#/responses/text_classifier_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - text_classifiers
      summary: Get the editable model parameters of named text classifier.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_get_params
      description: Get the editable model parameters of named text classifier.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/model_params"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## text_classifiers retrieve
########
  /text_classifiers/{instance_name}/retrieve:
    post:
      tags:
      - text_classifiers
      summary: Classify text.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_retrieve
      description: Classifies the text and returns a probability sorted list of classes.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: text_input
        description: The input text.
        required: true
        schema:
          $ref: "#/definitions/text_input"
      responses:
        200:
          $ref: "#/responses/scored_label_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## text_classifiers vaporise
########
  /text_classifiers/{instance_name}/vaporise:
    post:
      tags:
      - text_classifiers
      summary: Vaporise the named model.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_vaporise
      description: Permanently vaporises a model even if not trashed.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/text_classifier_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## text_classifiers get list of class labels
########
  /text_classifiers/{instance_name}/get_labels:
    get:
      tags:
      - text_classifiers
      summary: Get list of possible labels.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_get_labels
      description: Returns the classifier's list of possible class labels.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labels"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## text_classifiers curation endpoint
########
  /text_classifiers/{instance_name}/curate:
    post:
      tags:
      - text_classifiers
      summary: Endpoint to aid in the curation of a model instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_curate
      description: Returns the list of samples behind a cell of the confusion matrix of the training or testing samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: label_pair
        description: The true label, predicted label and matrix (train/test) to use.
        required: true
        schema:
          $ref: "#/definitions/class_label_pair"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

###################################
###################################
########
## word_manifolds root
########
  /word_manifolds:
    post:
      tags:
      - word_manifolds
      summary: Create a word manifold model.
      x-swagger-router-controller: rest_api.flask_server.controllers.word_manifolds_controller
      operationId: word_manifold_create
      description: Create a new word manifold model using an input file or reload one from the trash. Warning! - These models are quite big and each takes a few seconds to load/create. Returns the details of the new or loaded instance.
      parameters:
      - in: body
        name: create_details
        description: The details of the word manifold instance to create.
        required: true
        schema:
          $ref: "#/definitions/word_manifold_create_details"
      responses:
        200:
          $ref: "#/responses/word_manifold_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## word_manifolds Get details of named instance
########
  /word_manifolds/{instance_name}:
    get:
      tags:
      - word_manifolds
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.word_manifolds_controller
      operationId: word_manifold_get_details
      description: Get the details of the named word manifold instance.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/word_manifold_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - word_manifolds
      summary: Delete named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.word_manifolds_controller
      operationId: word_manifold_del
      description: Delete and return the details of the word manifold instance. Deleted models can be reloaded from the trash with the create operation.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/word_manifold_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## word_manifolds vaporise
########
  /word_manifolds/{instance_name}/vaporise:
    post:
      tags:
      - word_manifolds
      summary: Vaporise the named model.
      x-swagger-router-controller: rest_api.flask_server.controllers.word_manifolds_controller
      operationId: word_manifold_vaporise
      description: Permanently vaporises a model even if not trashed.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/word_manifold_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## word_manifolds vocab
########
  /word_manifolds/{instance_name}/vocab:
    post:
      tags:
      - word_manifolds
      summary: Add new words.
      x-swagger-router-controller: rest_api.flask_server.controllers.word_manifolds_controller
      operationId: word_manifold_add_similar_words
      description: Add new words to the manifold that are similar to existing words and save the manifold. Warning! - Because this operation saves the updated word manifold to the store it could take a few seconds to complete. Returns the details of the updated instance.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: new_word_list
        description: List of new words.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/new_word"
      responses:
        200:
          $ref: "#/responses/word_manifold_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## word_manifolds similar_words
########
  /word_manifolds/{instance_name}/similar_words:
    post:
      tags:
      - word_manifolds
      summary: Find similar words.
      x-swagger-router-controller: rest_api.flask_server.controllers.word_manifolds_controller
      operationId: word_manifold_get_similar_words
      description: Returns words from the manifold that are similar to the parameter word.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: word_and_threshold
        description: A word token and an accompanying threshold.
        required: true
        schema:
          $ref: "#/definitions/word_and_threshold"
      responses:
        200:
          $ref: "#/responses/word_and_distance_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## word_manifolds spell_correct
########
  /word_manifolds/{instance_name}/spell_correct:
    post:
      tags:
      - word_manifolds
      summary: Spell correct a word.
      x-swagger-router-controller: rest_api.flask_server.controllers.word_manifolds_controller
      operationId: word_manifold_spell_correct
      description: Spell correct a word replacing it with the most likely word from the manifold. Returns one or more scored candidate words.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: text_input
        description: The input text.
        required: true
        schema:
          $ref: "#/definitions/text_input"
      responses:
        200:
          $ref: "#/responses/word_and_distance_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

###################################
###################################
########
## intent_classifiers root
########
  /intent_classifiers:
    post:
      tags:
      - intent_classifiers
      summary: Create an intent classifier.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_create
      description: Create a new intent classifier or reload one from the trash. Returns the details of the new or loaded instance.
      parameters:
      - in: body
        name: create_details
        description: The details of the instance to create.
        required: true
        schema:
          $ref: "#/definitions/intent_classifier_create_details"
      responses:
        200:
          $ref: "#/responses/intent_classifier_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - intent_classifiers
      summary: Get list of loaded intent classifiers.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_get_details_all
      description: Returns the list of loaded intent classifiers.
      responses:
        200:
          $ref: "#/responses/intent_classifier_instance_detail_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## intent_classifiers Get details of named instance
########
  /intent_classifiers/{instance_name}:
    get:
      tags:
      - intent_classifiers
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_get_details
      description: Returns the details of the named intent classifier instance.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/intent_classifier_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - intent_classifiers
      summary: Delete named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_del
      description: Delete and return the details of the named intent classifier instance. Deleted models can be reloaded from the trash with the create operation.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/intent_classifier_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## intent_classifiers training samples
########
  /intent_classifiers/{instance_name}/training_samples:
    post:
      tags:
      - intent_classifiers
      summary: Add training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_add_training_samples
      description: Add training samples to named intent classifier. Returns the classifier's updated number of training samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/total_samples"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - intent_classifiers
      summary: Get training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_get_training_samples
      description: Returns the training samples of the named intent classifier.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - intent_classifiers
      summary: Delete training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_del_training_samples
      description: Delete the listed training samples of the named intent classifier. Returns the deleted samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

  /intent_classifiers/{instance_name}/training_samples_all:
    delete:
      tags:
      - intent_classifiers
      summary: Delete all training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_del_training_samples_all
      description: Delete the listed training samples of the named intent classifier. Returns the deleted samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## intent_classifiers testing samples
########
  /intent_classifiers/{instance_name}/testing_samples:
    post:
      tags:
      - intent_classifiers
      summary: Add testing samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_add_testing_samples
      description: Add testing samples to named intent classifier. Returns the classifier's updated number of testing samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/total_samples"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - intent_classifiers
      summary: Get testing samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_get_testing_samples
      description: Returns the testing samples of the named intent classifier.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - intent_classifiers
      summary: Delete testing samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_del_testing_samples
      description: Delete the listed testing samples of the named intent classifier. Returns the deleted samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

  /intent_classifiers/{instance_name}/testing_samples_all:
    delete:
      tags:
      - intent_classifiers
      summary: Delete all testing samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_del_testing_samples_all
      description: Delete all testing samples of the named intent classifier. Returns the deleted samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## intent_classifiers train
########
  /intent_classifiers/{instance_name}/train:
    post:
      tags:
      - intent_classifiers
      summary: Train the named intent classifier.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_train
      description: Train the named intent classifier with the training and testing data already provided. Returns the updated instance details.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: train_details
        description: The arguments provided to the train operation.
        required: true
        schema:
          $ref: "#/definitions/train_details"
      responses:
        200:
          $ref: "#/responses/intent_classifier_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## intent_classifiers model_params
########
  /intent_classifiers/{instance_name}/params:
    post:
      tags:
      - intent_classifiers
      summary: Set the model parameters of named intent classifier.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_set_params
      description: Set the model parameters of named intent classifier.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: model_params
        description: The model parameters.
        required: true
        schema:
          $ref: "#/definitions/model_params"
      responses:
        200:
          $ref: "#/responses/intent_classifier_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - intent_classifiers
      summary: Get the editable model parameters of named intent classifier.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_get_params
      description: Get the editable model parameters of named intent classifier.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/model_params"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## intent_classifiers train online
########
  /intent_classifiers/{instance_name}/online_training_samples:
    post:
      tags:
      - intent_classifiers
      summary: Train/update the classifier online with the samples provided.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_online_training_samples
      description: Train/update the classifier online with the samples provided. This operation is more efficient than a full re-train. Returns the classifier's updated number of training samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/total_samples"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## intent_classifiers retrieve
########
  /intent_classifiers/{instance_name}/retrieve:
    post:
      tags:
      - intent_classifiers
      summary: Classify intent.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_retrieve
      description: Classifies the intent and returns a probability sorted list of classes.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: text_input
        description: The input text.
        required: true
        schema:
          $ref: "#/definitions/text_input"
      responses:
        200:
          $ref: "#/responses/scored_label_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## intent_classifiers vaporise
########
  /intent_classifiers/{instance_name}/vaporise:
    post:
      tags:
      - intent_classifiers
      summary: Vaporise the named model.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_vaporise
      description: Permanently vaporises a model even if not trashed.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/intent_classifier_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## intent_classifiers get list of class labels
########
  /intent_classifiers/{instance_name}/get_labels:
    get:
      tags:
      - intent_classifiers
      summary: Get list of possible labels.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_get_labels
      description: Returns the classifier's list of possible class labels.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labels"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## intent_classifiers curation endpoint
########
  /intent_classifiers/{instance_name}/curate:
    post:
      tags:
      - intent_classifiers
      summary: Endpoint to aid in the curation of a model instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_curate
      description: Returns the list of samples behind a cell of the confusion matrix of the training or testing samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: label_pair
        description: The true label, predicted label and matrix (train/test) to use.
        required: true
        schema:
          $ref: "#/definitions/class_label_pair"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"


###################################
###################################
########
## FAQ matchers root
########
  /faq_matchers:
    post:
      tags:
      - faq_matchers
      summary: Create an FAQ matcher.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_create
      description: Create a new faq matcher or reload one from the trash. Returns the details of the new or loaded instance.
      parameters:
      - in: body
        name: create_details
        description: The details of the instance to create.
        required: true
        schema:
          $ref: "#/definitions/faq_matcher_create_details"
      responses:
        200:
          $ref: "#/responses/faq_matcher_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - faq_matchers
      summary: Get list of loaded FAQ matchers.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_get_details_all
      description: Returns the list of loaded faq matchers.
      responses:
        200:
          $ref: "#/responses/faq_matcher_instance_detail_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## faq_matchers Get details of named instance
########
  /faq_matchers/{instance_name}:
    get:
      tags:
      - faq_matchers
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_get_details
      description: Get the details of the named FAQ matcher instance.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/faq_matcher_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - faq_matchers
      summary: Delete named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_del
      description: Delete and return the details of the named FAQ matcher instance. Deleted models can be reloaded from the trash with the create operation.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/faq_matcher_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## faq_matchers training samples
########
  /faq_matchers/{instance_name}/training_samples:
    post:
      tags:
      - faq_matchers
      summary: Add training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_add_training_samples
      description: Add training samples to named faq matcher. Returns the FAQ matcher's updated number of training samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/total_samples"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - faq_matchers
      summary: Get training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_get_training_samples
      description: Returns the training samples of the named faq matcher.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - faq_matchers
      summary: Delete training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_del_training_samples
      description: Delete the listed training samples of the named FAQ matcher. Returns the deleted samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

  /faq_matchers/{instance_name}/training_samples_all:
    delete:
      tags:
      - faq_matchers
      summary: Delete all training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_del_training_samples_all
      description: Delete all training samples of the named FAQ matcher. Returns the deleted samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## faq_matchers testing samples
########
  /faq_matchers/{instance_name}/testing_samples:
    post:
      tags:
      - faq_matchers
      summary: Add testing samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_add_testing_samples
      description: Add testing samples to named faq matcher. Returns the FAQ matcher's updated number of testing samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/total_samples"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - faq_matchers
      summary: Get testing samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_get_testing_samples
      description: Returns the testing samples of the named faq matcher.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - faq_matchers
      summary: Delete testing samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_del_testing_samples
      description: Delete the listed testing samples of the named FAQ matcher. Returns the deleted samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

  /faq_matchers/{instance_name}/testing_samples_all:
    delete:
      tags:
      - faq_matchers
      summary: Delete all testing samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_del_testing_samples_all
      description: Delete all testing samples of the named FAQ matcher. Returns the deleted samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## faq_matchers train
########
  /faq_matchers/{instance_name}/train:
    post:
      tags:
      - faq_matchers
      summary: Train the named FAQ matcher.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_train
      description: Train the named FAQ matcher with the training and testing data already provided. Returns the updated instance detail.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: train_details
        description: The arguments provided to the train operation.
        required: true
        schema:
          $ref: "#/definitions/train_details"
      responses:
        200:
          $ref: "#/responses/faq_matcher_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## faq_matchers model_params
########
  /faq_matchers/{instance_name}/params:
    post:
      tags:
      - faq_matchers
      summary: Set the model parameters of named FAQ matcher.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_set_params
      description: Set the model parameters of FAQ matcher.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: model_params
        description: The model parameters.
        required: true
        schema:
          $ref: "#/definitions/model_params"
      responses:
        200:
          $ref: "#/responses/faq_matcher_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - faq_matchers
      summary: Get the editable model parameters of named FAQ matcher.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_get_params
      description: Get the editable model parameters of FAQ matcher.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/model_params"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## faq_matchers train online
########
  /faq_matchers/{instance_name}/online_training_samples:
    post:
      tags:
      - faq_matchers
      summary: Train/update the classifier online with the samples provided.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_online_training_samples
      description: Train/update the classifier online with the samples provided. This operation is more efficient than a full re-train. Returns the classifier's updated number of training samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: labelled_text_sample_list
        description: List of labelled text samples.
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/labelled_text_sample"
      responses:
        200:
          $ref: "#/responses/total_samples"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## faq_matchers retrieve
########
  /faq_matchers/{instance_name}/retrieve:
    post:
      tags:
      - faq_matchers
      summary: Match retrieve and FAQ.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_retrieve
      description: Matchers the FAQ and returns a probability sorted list of answer labels.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: text_input
        description: The input text.
        required: true
        schema:
          $ref: "#/definitions/text_input"
      responses:
        200:
          $ref: "#/responses/scored_label_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## faq_matchers vaporise
########
  /faq_matchers/{instance_name}/vaporise:
    post:
      tags:
      - faq_matchers
      summary: Vaporise the named model.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_vaporise
      description: Permanently vaporises a model even if not trashed.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/faq_matcher_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## faq_matchers get list of class labels
########
  /faq_matchers/{instance_name}/get_labels:
    get:
      tags:
      - faq_matchers
      summary: Get list of possible labels.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_get_labels
      description: Returns the classifier's list of possible class labels.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labels"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## faq_matchers curation endpoint
########
  /faq_matchers/{instance_name}/curate:
    post:
      tags:
      - faq_matchers
      summary: Endpoint to aid in the curation of a model instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_curate
      description: Returns the list of samples behind a cell of the confusion matrix of the training or testing samples.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: label_pair
        description: The true label, predicted label and matrix (train/test) to use.
        required: true
        schema:
          $ref: "#/definitions/class_label_pair"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"


###################################
###################################
########
## Extract a list of dates from the text input.
########
  /date_parsers/{instance_name}/retrieve:
    post:
      tags:
      - date_parsers
      summary: Extract dates.
      x-swagger-router-controller: rest_api.flask_server.controllers.date_parsers_controller
      operationId: date_parser_retrieve
      description: Parses one or more dates from text.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: text_input
        description: The input text.
        required: true
        schema:
          $ref: "#/definitions/text_input"
      responses:
        200:
          $ref: "#/responses/date_entity_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"


###################################
###################################
########
## Detect the sentiment of the text input.
########
  /sentiment_detectors/{instance_name}/retrieve:
    post:
      tags:
      - sentiment_detectors
      summary: Detect sentiment.
      x-swagger-router-controller: rest_api.flask_server.controllers.sentiment_detectors_controller
      operationId: sentiment_detector_retrieve
      description: Detect the general sentiment in the input text.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: text_input
        description: The input text.
        required: true
        schema:
          $ref: "#/definitions/text_input"
      responses:
        200:
          $ref: "#/responses/sentiment"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"


###################################
###################################
########
## regex_entity_extractors root
########
  /regex_entity_extractors:
    post:
      tags:
      - regex_entity_extractors
      summary: Create a regular expression entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.regex_entity_extractors_controller
      operationId: regex_entity_extractor_create
      description: Create a new regular expression entity extractor or reload one from the trash.
      parameters:
      - in: body
        name: create_details
        description: The details of the instance to create.
        required: true
        schema:
          $ref: "#/definitions/regex_entity_extractor_create_details"
      responses:
        200:
          $ref: "#/responses/regex_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - regex_entity_extractors
      summary: Get list of loaded regular expression entity extractors.
      x-swagger-router-controller: rest_api.flask_server.controllers.regex_entity_extractors_controller
      operationId: regex_entity_extractor_get_details_all
      description: Get the list of loaded regular expression entity extractors.
      responses:
        200:
          $ref: "#/responses/regex_entity_extractor_instance_detail_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## regex_entity_extractors Get details of named instance
########
  /regex_entity_extractors/{instance_name}:
    get:
      tags:
      - regex_entity_extractors
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.regex_entity_extractors_controller
      operationId: regex_entity_extractor_get_details
      description: Get the details of the named regular expression entity extractor instance.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/regex_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - regex_entity_extractors
      summary: Delete named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.regex_entity_extractors_controller
      operationId: regex_entity_extractor_del
      description: Delete and get the details of the named regular expression entity extractor instance. Deleted models can be reloaded from the trash with the create operation.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/regex_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## regex_entity_extractors model_params
########
  /regex_entity_extractors/{instance_name}/params:
    post:
      tags:
      - regex_entity_extractors
      summary: Set the model parameters of named regex entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.regex_entity_extractors_controller
      operationId: regex_entity_extractor_set_params
      description: Set the model parameters of named regex entity extractor.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: model_params
        description: The model parameters.
        required: true
        schema:
          $ref: "#/definitions/model_params"
      responses:
        200:
          $ref: "#/responses/regex_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - regex_entity_extractors
      summary: Get the editable model parameters of named regex entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.regex_entity_extractors_controller
      operationId: regex_entity_extractor_get_params
      description: Get the editable model parameters of named regex entity extractor.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/model_params"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## regex_entity_extractors retrieve
########
  /regex_entity_extractors/{instance_name}/retrieve:
    post:
      tags:
      - regex_entity_extractors
      summary: Extract information based on the regular expression.
      x-swagger-router-controller: rest_api.flask_server.controllers.regex_entity_extractors_controller
      operationId: regex_entity_extractor_retrieve
      description: Extract the entities matching the regular expression.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: text_input
        description: The input text.
        required: true
        schema:
          $ref: "#/definitions/text_input"
      responses:
        200:
          $ref: "#/responses/entity_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## regex_entity_extractors vaporise
########
  /regex_entity_extractors/{instance_name}/vaporise:
    post:
      tags:
      - regex_entity_extractors
      summary: Vaporise the named model.
      x-swagger-router-controller: rest_api.flask_server.controllers.regex_entity_extractors_controller
      operationId: regex_entity_extractor_vaporise
      description: Permanently vaporises a model even if not trashed.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/regex_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

###################################
###################################
########
## person_name_entity_extractors root
########
  /person_name_entity_extractors:
    post:
      tags:
      - person_name_entity_extractors
      summary: Create a person_name entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.person_name_entity_extractors_controller
      operationId: person_name_entity_extractor_create
      description: Create a new person_name entity extractor or reload one from the trash.
      parameters:
      - in: body
        name: create_details
        description: The details of the instance to create.
        required: true
        schema:
          $ref: "#/definitions/person_name_entity_extractor_create_details"
      responses:
        200:
          $ref: "#/responses/person_name_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - person_name_entity_extractors
      summary: Get list of loaded regular expression entity extractors.
      x-swagger-router-controller: rest_api.flask_server.controllers.person_name_entity_extractors_controller
      operationId: person_name_entity_extractor_get_details_all
      description: Get the list of loaded person_name entity extractors.
      responses:
        200:
          $ref: "#/responses/person_name_entity_extractor_instance_detail_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## person_name_entity_extractors Get details of named instance
########
  /person_name_entity_extractors/{instance_name}:
    get:
      tags:
      - person_name_entity_extractors
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.person_name_entity_extractors_controller
      operationId: person_name_entity_extractor_get_details
      description: Get the details of the named person_name entity extractor instance.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/person_name_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - person_name_entity_extractors
      summary: Delete named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.person_name_entity_extractors_controller
      operationId: person_name_entity_extractor_del
      description: Delete and return the details of the named person_name entity extractor instance. Deleted models can be reloaded from the trash with the create operation.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/person_name_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## person_name_entity_extractors model_params
########
  /person_name_entity_extractors/{instance_name}/params:
    post:
      tags:
      - person_name_entity_extractors
      summary: Set the model parameters of named person name entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.person_name_entity_extractors_controller
      operationId: person_name_entity_extractor_set_params
      description: Set the model parameters of named person name entity extractor.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: model_params
        description: The model parameters.
        required: true
        schema:
          $ref: "#/definitions/model_params"
      responses:
        200:
          $ref: "#/responses/person_name_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - person_name_entity_extractors
      summary: Get the editable model parameters of named person name entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.person_name_entity_extractors_controller
      operationId: person_name_entity_extractor_get_params
      description: Get the editable model parameters of named person name entity extractor.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/model_params"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## person_name_entity_extractors retrieve
########
  /person_name_entity_extractors/{instance_name}/retrieve:
    post:
      tags:
      - person_name_entity_extractors
      summary: Extract information based on the regular expression.
      x-swagger-router-controller: rest_api.flask_server.controllers.person_name_entity_extractors_controller
      operationId: person_name_entity_extractor_retrieve
      description: Extract the entities parsed by person_name.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: text_input
        description: The input text.
        required: true
        schema:
          $ref: "#/definitions/text_input"
      responses:
        200:
          $ref: "#/responses/entity_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## person_name_entity_extractors vaporise
########
  /person_name_entity_extractors/{instance_name}/vaporise:
    post:
      tags:
      - person_name_entity_extractors
      summary: Vaporise the named model.
      x-swagger-router-controller: rest_api.flask_server.controllers.person_name_entity_extractors_controller
      operationId: person_name_entity_extractor_vaporise
      description: Permanently vaporises a model even if not trashed.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/person_name_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

###################################
###################################
########
## duckling_entity_extractors root
########
  /duckling_entity_extractors:
    post:
      tags:
      - duckling_entity_extractors
      summary: Create a duckling entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.duckling_entity_extractors_controller
      operationId: duckling_entity_extractor_create
      description: Create a new duckling entity extractor or reload one from the trash.
      parameters:
      - in: body
        name: create_details
        description: The details of the instance to create.
        required: true
        schema:
          $ref: "#/definitions/duckling_entity_extractor_create_details"
      responses:
        200:
          $ref: "#/responses/duckling_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - duckling_entity_extractors
      summary: Get list of loaded regular expression entity extractors.
      x-swagger-router-controller: rest_api.flask_server.controllers.duckling_entity_extractors_controller
      operationId: duckling_entity_extractor_get_details_all
      description: Get the list of loaded duckling entity extractors.
      responses:
        200:
          $ref: "#/responses/duckling_entity_extractor_instance_detail_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## duckling_entity_extractors Get details of named instance
########
  /duckling_entity_extractors/{instance_name}:
    get:
      tags:
      - duckling_entity_extractors
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.duckling_entity_extractors_controller
      operationId: duckling_entity_extractor_get_details
      description: Get the details of the named duckling entity extractor instance.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/duckling_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - duckling_entity_extractors
      summary: Delete named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.duckling_entity_extractors_controller
      operationId: duckling_entity_extractor_del
      description: Delete and return the details of the named duckling entity extractor instance. Deleted models can be reloaded from the trash with the create operation.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/duckling_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## duckling_entity_extractors model_params
########
  /duckling_entity_extractors/{instance_name}/params:
    post:
      tags:
      - duckling_entity_extractors
      summary: Set the model parameters of named duckling entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.duckling_entity_extractors_controller
      operationId: duckling_entity_extractor_set_params
      description: Set the model parameters of named duckling entity extractor.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: model_params
        description: The model parameters.
        required: true
        schema:
          $ref: "#/definitions/model_params"
      responses:
        200:
          $ref: "#/responses/duckling_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - duckling_entity_extractors
      summary: Get the editable model parameters of named duckling entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.duckling_entity_extractors_controller
      operationId: duckling_entity_extractor_get_params
      description: Get the editable model parameters of named duckling entity extractor.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/model_params"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## duckling_entity_extractors retrieve
########
  /duckling_entity_extractors/{instance_name}/retrieve:
    post:
      tags:
      - duckling_entity_extractors
      summary: Extract information based on the regular expression.
      x-swagger-router-controller: rest_api.flask_server.controllers.duckling_entity_extractors_controller
      operationId: duckling_entity_extractor_retrieve
      description: Extract the entities parsed by duckling.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: text_input
        description: The input text.
        required: true
        schema:
          $ref: "#/definitions/text_input"
      responses:
        200:
          $ref: "#/responses/entity_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## duckling_entity_extractors vaporise
########
  /duckling_entity_extractors/{instance_name}/vaporise:
    post:
      tags:
      - duckling_entity_extractors
      summary: Vaporise the named model.
      x-swagger-router-controller: rest_api.flask_server.controllers.duckling_entity_extractors_controller
      operationId: duckling_entity_extractor_vaporise
      description: Permanently vaporises a model even if not trashed.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/duckling_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

###################################
###################################
########
## sim_word_entity_extractors root
########
  /sim_word_entity_extractors:
    post:
      tags:
      - sim_word_entity_extractors
      summary: Create a word similarity entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.sim_word_entity_extractors_controller
      operationId: sim_word_entity_extractor_create
      description: Create a new word similarity entity extractor or reload one from the trash.
      parameters:
      - in: body
        name: create_details
        description: The details of the instance to create.
        required: true
        schema:
          $ref: "#/definitions/sim_word_entity_extractor_create_details"
      responses:
        200:
          $ref: "#/responses/sim_word_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - sim_word_entity_extractors
      summary: Get list of loaded similarity entity extractors.
      x-swagger-router-controller: rest_api.flask_server.controllers.sim_word_entity_extractors_controller
      operationId: sim_word_entity_extractor_get_details_all
      description: Get the list of loaded similarity entity extractors.
      responses:
        200:
          $ref: "#/responses/sim_word_entity_extractor_instance_detail_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## sim_word_entity_extractors Get details of named instance
########
  /sim_word_entity_extractors/{instance_name}:
    get:
      tags:
      - sim_word_entity_extractors
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.sim_word_entity_extractors_controller
      operationId: sim_word_entity_extractor_get_details
      description: Get the details of the named similarity entity extractor instance.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/sim_word_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - sim_word_entity_extractors
      summary: Delete named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.sim_word_entity_extractors_controller
      operationId: sim_word_entity_extractor_del
      description: Delete and return the details of the named similarity entity extractor instance. Deleted models can be reloaded from the trash with the create operation.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/sim_word_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## sim_word_entity_extractors model_params
########
  /sim_word_entity_extractors/{instance_name}/params:
    post:
      tags:
      - sim_word_entity_extractors
      summary: Set the model parameters of named similarity entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.sim_word_entity_extractors_controller
      operationId: sim_word_entity_extractor_set_params
      description: Set the model parameters of named similarity entity extractor.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: model_params
        description: The model parameters.
        required: true
        schema:
          $ref: "#/definitions/model_params"
      responses:
        200:
          $ref: "#/responses/sim_word_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - sim_word_entity_extractors
      summary: Get the editable model parameters of named similarity entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.sim_word_entity_extractors_controller
      operationId: sim_word_entity_extractor_get_params
      description: Get the editable model parameters of named similarity entity extractor.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/model_params"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## sim_word_entity_extractors retrieve
########
  /sim_word_entity_extractors/{instance_name}/retrieve:
    post:
      tags:
      - sim_word_entity_extractors
      summary: Extract information based on word similarity.
      x-swagger-router-controller: rest_api.flask_server.controllers.sim_word_entity_extractors_controller
      operationId: sim_word_entity_extractor_retrieve
      description: Extract the word entities that are similar to the list of words used to create this model instance.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: text_input
        description: The input text.
        required: true
        schema:
          $ref: "#/definitions/text_input"
      responses:
        200:
          $ref: "#/responses/entity_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## sim_word_entity_extractors vaporise
########
  /sim_word_entity_extractors/{instance_name}/vaporise:
    post:
      tags:
      - sim_word_entity_extractors
      summary: Vaporise the named model.
      x-swagger-router-controller: rest_api.flask_server.controllers.sim_word_entity_extractors_controller
      operationId: sim_word_entity_extractor_vaporise
      description: Permanently vaporises a model even if not trashed.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/sim_word_entity_extractor_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

###################################
###################################
########
## language_recognisers root
########
  /language_recognisers:
    post:
      tags:
      - language_recognisers
      summary: Create a text language detector.
      x-swagger-router-controller: rest_api.flask_server.controllers.language_recognisers_controller
      operationId: language_recogniser_create
      description: Create  new language detector from the pre-trained model name provided. 'lid_za' is currently the only pre-trained model that is available, but it was trained on all 11 languages and is pretty accurate. Returns the detail of the new instance.
      parameters:
      - in: body
        name: create_details
        description: The details of the instance to create.
        required: true
        schema:
          $ref: "#/definitions/language_recogniser_create_details"
      responses:
        200:
          $ref: "#/responses/language_recogniser_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - language_recognisers
      summary: Get list of loaded text language detectors.
      x-swagger-router-controller: rest_api.flask_server.controllers.language_recognisers_controller
      operationId: language_recogniser_get_details_all
      description: Get the list of loaded text language detectors.
      responses:
        200:
          $ref: "#/responses/language_recogniser_instance_detail_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## language_recognisers Get details of named instance
########
  /language_recognisers/{instance_name}:
    get:
      tags:
      - language_recognisers
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.language_recognisers_controller
      operationId: language_recogniser_get_details
      description: Get the details of the named text language detector instance.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/language_recogniser_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    delete:
      tags:
      - language_recognisers
      summary: Delete named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.language_recognisers_controller
      operationId: language_recogniser_del
      description: Delete and return the details of the named text language detector instance. Deleted models can be reloaded from the trash with the create operation.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/language_recogniser_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## language_recognisers model_params
########
  /language_recognisers/{instance_name}/params:
    post:
      tags:
      - language_recognisers
      summary: Set the model parameters of named language recogniser.
      x-swagger-router-controller: rest_api.flask_server.controllers.language_recognisers_controller
      operationId: language_recogniser_set_params
      description: Set the model parameters of named language recogniser.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: model_params
        description: The model parameters.
        required: true
        schema:
          $ref: "#/definitions/model_params"
      responses:
        200:
          $ref: "#/responses/language_recogniser_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

    get:
      tags:
      - language_recognisers
      summary: Get the editable model parameters of named language recogniser.
      x-swagger-router-controller: rest_api.flask_server.controllers.language_recognisers_controller
      operationId: language_recogniser_get_params
      description: Get the editable model parameters of named language recogniser.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/model_params"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## language_recognisers retrieve
########
  /language_recognisers/{instance_name}/retrieve:
    post:
      tags:
      - language_recognisers
      summary: Recognise the language the text is written in.
      x-swagger-router-controller: rest_api.flask_server.controllers.language_recognisers_controller
      operationId: language_recogniser_retrieve
      description: Recognise the language the text is written in. Returns the list of scored language codes.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      - in: body
        name: text_input
        description: The input text.
        required: true
        schema:
          $ref: "#/definitions/text_input"
      responses:
        200:
          $ref: "#/responses/scored_label_list"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## language_recognisers vaporise
########
  /language_recognisers/{instance_name}/vaporise:
    post:
      tags:
      - language_recognisers
      summary: Vaporise the named model.
      x-swagger-router-controller: rest_api.flask_server.controllers.language_recognisers_controller
      operationId: language_recogniser_vaporise
      description: Permanently vaporises a model even if not trashed.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/language_recogniser_instance_detail"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

########
## language_recognisers get list of class labels
########
  /language_recognisers/{instance_name}/get_labels:
    get:
      tags:
      - language_recognisers
      summary: Get list of possible labels.
      x-swagger-router-controller: rest_api.flask_server.controllers.language_recognisers_controller
      operationId: language_recogniser_get_labels
      description: Returns the classifier's list of possible class labels.
      parameters:
      - in: path
        name: instance_name
        description: The name of the model instance.
        required: true
        type: string
      responses:
        200:
          $ref: "#/responses/labels"
        400:
          description: bad request
        401:
          $ref: "#/responses/UnauthorizedError"

##################################
# Descriptions of common responses
##################################
responses:
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      WWW_Authenticate:
        type: string

  dashboard_detail:
    description: Your dashboard content.
    schema:
      $ref: "#/definitions/dashboard_detail"

  model_params:
    description: The model parameters.
    schema:
      $ref: "#/definitions/model_params"

  text_classifier_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/text_classifier_instance_detail"

  text_classifier_instance_detail_list:
    description: A list of models' instance details
    schema:
      type: array
      items:
        $ref: "#/definitions/text_classifier_instance_detail"

  word_manifold_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/word_manifold_instance_detail"

  word_manifold_instance_detail_list:
    description: A list of models' instance details
    schema:
      type: array
      items:
        $ref: "#/definitions/word_manifold_instance_detail"

  faq_matcher_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/faq_matcher_instance_detail"

  faq_matcher_instance_detail_list:
    description: A list of models' instance details
    schema:
      type: array
      items:
        $ref: "#/definitions/faq_matcher_instance_detail"

  intent_classifier_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/intent_classifier_instance_detail"

  intent_classifier_instance_detail_list:
    description: A list of models' instance details
    schema:
      type: array
      items:
        $ref: "#/definitions/intent_classifier_instance_detail"

  regex_entity_extractor_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/regex_entity_extractor_instance_detail"

  regex_entity_extractor_instance_detail_list:
    description: A list of models' instance details
    schema:
      type: array
      items:
        $ref: "#/definitions/regex_entity_extractor_instance_detail"

  person_name_entity_extractor_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/person_name_entity_extractor_instance_detail"

  person_name_entity_extractor_instance_detail_list:
    description: A list of models' instance details
    schema:
      type: array
      items:
        $ref: "#/definitions/person_name_entity_extractor_instance_detail"

  duckling_entity_extractor_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/duckling_entity_extractor_instance_detail"

  duckling_entity_extractor_instance_detail_list:
    description: A list of models' instance details
    schema:
      type: array
      items:
        $ref: "#/definitions/duckling_entity_extractor_instance_detail"

  sim_word_entity_extractor_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/sim_word_entity_extractor_instance_detail"

  sim_word_entity_extractor_instance_detail_list:
    description: A list of models' instance details
    schema:
      type: array
      items:
        $ref: "#/definitions/sim_word_entity_extractor_instance_detail"

  language_recogniser_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/language_recogniser_instance_detail"

  language_recogniser_instance_detail_list:
    description: A list of models' instance details
    schema:
      type: array
      items:
        $ref: "#/definitions/language_recogniser_instance_detail"

  total_samples:
    description: The total number of samples of this type in the model.
    schema:
      $ref: "#/definitions/total_samples"

  labelled_text_sample_list:
    description: The list of labeled text samples.
    schema:
      type: array
      items:
        $ref: "#/definitions/labelled_text_sample"

  word_and_distance_list:
    description: A list of words with distances.
    schema:
      type: array
      items:
        $ref: "#/definitions/word_and_distance"

  scored_label_list:
    description: The list of scored and sorted labels.
    schema:
      type: array
      items:
        $ref: "#/definitions/scored_label"

  labels:
    description: The list of possible labels.
    schema:
      type: array
      items:
        $ref: "#/definitions/class_label"

  entity_list:
    description: The list of extracted entities.
    schema:
      type: array
      items:
        $ref: "#/definitions/entity"

  date_entity_list:
    description: The list of structured dates.
    schema:
      type: array
      items:
        $ref: "#/definitions/date_entity"

  sentiment:
    description: The coarse sentiment.
    schema:
      $ref: "#/definitions/sentiment"

####################################
# Descriptions of common definitions
####################################
definitions:
#  rate_limited_response_headers:
#    description: The model instance detail.
#    headers:
#      X-RateLimit-Remaining:
#        schema:
#          type: integer
#        description: The number of requests left for the time window.

  dashboard_model_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - model_type
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: example_instance
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: This is an example of this type of model.
      model_type:
        description: The type of this model.
        type: string
        example: faq_matcher
      trashed:
        description: Whether or not this model has been deleted. Deleted models need to be loaded to be used again.
        type: boolean
        example: False

  dashboard_detail:
    description: Your dashboard content.
    type: object
    required:
    - api_version
    - service_name
    - model_list
    properties:
      api_version:
        description: The version of the http api.
        type: string
        example: 2.0.1
      service_name:
        description: The details of this service.
        type: string
        example: FeersumNLU playground.
      model_list:
        description: A list of models' instance details.
        type: array
        items:
          $ref: "#/definitions/dashboard_model_detail"

  text_classifier_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'This is an example of this type of model.'
      training_accuracy:
        description: The accuracy of the model as measured on the training set.
        type: number
        example: 1.0
      training_f1:
        description: The average F-score of the model as measured on the training set.
        type: number
        example: 1.0
      training_cm:
        description: The confusion matrix as measured on the training set. The matrix is expected to be quite sparse so a compact dict of dicts representation is used.
        type: object
      testing_accuracy:
        description: The accuracy of the model as measured on the testing set.
        type: number
        example: 1.0
      testing_f1:
        description: The average F-score of the model as measured on the testing set.
        type: number
        example: 1.0
      testing_cm:
        description: The confusion matrix as measured on the testing set. The matrix is expected to be quite sparse so a compact dict of dicts representation is used.
        type: object
      cm_labels:
        description: A dict that, if present, maps from the confusion matrix row and column labels to longer more descriptive labels. For example, if present it maps an FAQ answer ID to the string answer which may be either a label or the full text answer.
        type: object
      training_stamp:
        description: The time when the training operation concluded.
        type: string
        example: '2017-10-26 10:42:01.589979'

  word_manifold_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'This is an example of this type of model.'
      word_vectors_file:
        description: The input file on the server (if any) to use.
        type: string
        example: 'glove_za_eng.txt'

  faq_matcher_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'This is an example of this type of model.'
      training_accuracy:
        description: The accuracy of the model as measured on the training set.
        type: number
        example: 1.0
      training_f1:
        description: The average F-score of the model as measured on the training set.
        type: number
        example: 1.0
      training_cm:
        description: The confusion matrix as measured on the training set. The matrix is expected to be quite sparse so a compact dict of dicts representation is used.
        type: object
      testing_accuracy:
        description: The accuracy of the model as measured on the testing set.
        type: number
        example: 1.0
      testing_f1:
        description: The average F-score of the model as measured on the testing set.
        type: number
        example: 1.0
      testing_cm:
        description: The confusion matrix as measured on the testing set. The matrix is expected to be quite sparse so a compact dict of dicts representation is used.
        type: object
      cm_labels:
        description: A dict that, if present, maps from the confusion matrix row and column labels to longer more descriptive labels. For example, if present it maps an FAQ answer ID to the string answer which may be either a label or the full text answer.
        type: object
      training_stamp:
        description: The time when the training operation concluded.
        type: string
        example: '2017-10-26 10:42:01.589979'
      word_manifold_list:
        description: The list of labelled word manifolds used for training.
        type: array
        items:
          $ref: "#/definitions/labeled_word_manifold"
      threshold:
        description: There is typically some model dependent threshold to be set upon training and which is possibly mutable post training. This is that threshold.
        type: number
        example: 0.85

  intent_classifier_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'This is an example of this type of model.'
      training_accuracy:
        description: The accuracy of the model as measured on the training set.
        type: number
        example: 1.0
      training_f1:
        description: The average F-score of the model as measured on the training set.
        type: number
        example: 1.0
      training_cm:
        description: The confusion matrix as measured on the training set. The matrix is expected to be quite sparse so a compact dict of dicts representation is used.
        type: object
      testing_accuracy:
        description: The accuracy of the model as measured on the testing set.
        type: number
        example: 1.0
      testing_f1:
        description: The average F-score of the model as measured on the testing set.
        type: number
        example: 1.0
      testing_cm:
        description: The confusion matrix as measured on the testing set. The matrix is expected to be quite sparse so a compact dict of dicts representation is used.
        type: object
      cm_labels:
        description: A dict that, if present, maps from the confusion matrix row and column labels to longer more descriptive labels. For example, if present it maps an FAQ answer ID to the string answer which may be either a label or the full text answer.
        type: object
      training_stamp:
        description: The time when the training operation concluded.
        type: string
        example: '2017-10-26 10:42:01.589979'
      word_manifold_list:
        description: The list of labelled word manifolds used for training.
        type: array
        items:
          $ref: "#/definitions/labeled_word_manifold"
      threshold:
        description: There is typically some model dependent threshold to be set upon training and which is possibly mutable post training. This is that threshold.
        type: number
        example: 0.85

  regex_entity_extractor_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    - regex
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      regex:
        description: The regular expression i.e. '(?P<license>([A-Z]{3}[ ]?[0-9]{3}[ ]?(GP|NW|MP|EC|L|NC|NW)))'
        type: string
        example: '(?P<license>([A-Z]{3}[ ]?[0-9]{3}[ ]?(GP|NW|MP|EC|L|NC|NW)))'

  person_name_entity_extractor_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'

  duckling_entity_extractor_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      reference_time:
        description: The reference time of the date parser. Uses international standard date notation 'YYYY-MM-DD hh:mm+hh:mm' e.g. '2017-12-01', '2017-12-01 10:00' (server local zone), '2017-12-01 10:00+02:00'
        type: string
        example: '2017-12-10'

  sim_word_entity_extractor_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    - similar_words
    - threshold
    - word_manifold
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      similar_words:
        description: The list of similar words to test against.
        type: array
        items:
          type: string
          example: 'cat'
      threshold:
        description: The threshold below which words are not similar.
        type: number
        example: 0.65
      word_manifold:
        description: The word manifold used to measure word similarity.
        type: string
        example: 'feers_wm_eng'

  language_recogniser_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    - lid_model_file
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      lid_model_file:
        description: The pre-trained model this instance was created from.
        type: string
        example: 'lid_za'

  text_classifier_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the trash. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False

  faq_matcher_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      lid_model_file:
        description: The pre-trained LID model to load.
        type: string
        example: 'lid_za'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the trash. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False

  intent_classifier_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      lid_model_file:
        description: The pre-trained LID model to load.
        type: string
        example: 'lid_za'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the trash. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False

  word_manifold_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance.
        type: string
        example: 'example_instance'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the trash. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False
      word_vectors_file:
        description: The input file on the server (if any) to use.
        type: string
        example: 'glove_za_eng.txt'

  regex_entity_extractor_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance to create.
        type: string
        example: 'example_instance'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example model of this type.'
      regex:
        description: The regular expression.
        type: string
        example: '(?P<license>([A-Z]{3}[ ]?[0-9]{3}[ ]?(GP|NW|MP|EC|L|NC|NW)))'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the trash. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False

  person_name_entity_extractor_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance to create.
        type: string
        example: 'example_instance'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'This is an example of this type of model.'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the trash. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False

  duckling_entity_extractor_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance to create.
        type: string
        example: 'example_instance'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'This is an example of this type of model.'
      reference_time:
        description: The reference time of the date parser. Uses international standard date notation 'YYYY-MM-DD hh:mm+hh:mm' e.g. '2017-12-01', '2017-12-01 10:00' (server local zone), '2017-12-01 10:00+02:00'
        type: string
        default: ''
        example: '2017-12-10'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the trash. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False

  sim_word_entity_extractor_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance to create.
        type: string
        example: 'example_instance'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model'
      similar_words:
        type: array
        items:
          type: string
          example: 'cat'
      threshold:
        description: The threshold below which words are not similar.
        type: number
        example: 0.65
      word_manifold:
        type: string
        example: 'feers_wm_eng'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the trash. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False

  language_recogniser_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance to create.
        type: string
        example: 'example_instance'
      long_name:
        description: The human-friendly-name of the instance.
        type: string
        example: The example instance.
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      lid_model_file:
        description: The pre-trained LID model to load.
        type: string
        example: 'lid_za'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the trash. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False

  labelled_text_sample:
    description: Labelled text sample.
    type: object
    required:
      - text
      - label
    properties:
      text:
        type: string
        example: 'Hello, my name is Tom.'
      label:
        type: string
        example: 'greeting'
      lang_code:
        description: A 3 character ISO 639-3 language code - eng, afr, nbl, xho, zul, ssw, nso, sot, tsn, ven, tso.
        type: string
        example: 'eng'
      comment:
        description: A string note such as the exact answer text from a helpdesk or any other important facts about the text.
        type: string
        example: "Greeting with speaker's name."

  labeled_word_manifold:
    description: A labelled (e.g. lang_code labelled) word manifold instance.
    type: object
    required:
    - label
    - word_manifold
    properties:
      label:
        description: The language code label.
        type: string
        example: 'eng'
      word_manifold:
        description: The name of the word manifold to use for the language code.
        type: string
        example: 'feers_wm_eng'

  train_details:
    description: The parameters provided to the train operation.
    type: object
    properties:
      threshold:
        description: There is typically some model dependent threshold to be set upon training which is possibly mutable post training. This is that threshold.
        type: number
        example: 0.85
      immediate_mode:
        description: Set immediate_mode to True to do synchronous/blocking training. Might be forced to False in production.
        type: boolean
        example: False
      word_manifold:
        description: |
          The word manifold instance to use for training and later inference.

          Rather use the word_manifold_list for supplying a language labelled list of word manifold instances to use in a multi-language system.
        type: string
        example: 'feers_wm_eng'
      word_manifold_list:
        description: The list of labelled word manifolds to use for training.
        type: array
        items:
          $ref: "#/definitions/labeled_word_manifold"

  model_params:
    description: The model parameters. Dict of parameters like name, long_name, desc, threshold ...
    type: object
    properties:
      long_name:
        type: string
      desc:
        type: string
      threshold:
        type: number

  total_samples:
    description: The total number of samples of this type now loaded into the model.
    type: object
    required:
    - total_samples
    properties:
      total_samples:
        type: integer
        example: 4

  text_input:
    description: The text input to be classified, matched or parsed.
    type: object
    required:
    - text
    properties:
      text:
        description: The text input to be classified, matched or parsed.
        type: string
        example: 'Hi, you may call me Tom.'
      lang_code:
        description: An optional ISO 639-3 language code hint - eng, afr, nbl, xho, zul, ssw, nso, sot, tsn, ven, tso.
        type: string
        example: 'eng'

  word_and_threshold:
    description: A word and a threshold.
    type: object
    required:
    - word
    - threshold
    properties:
      word:
        type: string
        example: 'cat'
      threshold:
        type: number
        example: 0.75

  word_and_distance:
    description: A word and a distance.
    type: object
    required:
    - word
    - distance
    properties:
      word:
        type: string
        example: 'cat'
      distance:
        type: number
        example: 0.75

  scored_label:
    description: A class label with an associated probablity.
    type: object
    required:
    - label
    - probability
    properties:
      label:
        type: string
        example: 'greeting'
      probability:
        type: number
        example: 0.95

  class_label:
    description: A class label.
    type: string
    example: 'greeting'

  class_label_pair:
    description: The ground truth label, predicted label and matrix (train/test) to use.
    type: object
    required:
      - true_label
      - predicted_label
      - matrix_name
    properties:
      true_label:
        type: string
        example: 'greeting'
      predicted_label:
        type: string
        example: 'question'
      matrix_name:
        description: The confusion matrix to use. Should be either 'train' or 'test' which refers to the confusion matrix of the training data or the testing data respectively.
        type: string
        example: 'train'

  date_entity:
    description: A structured date-time string with a best guess on the specificity/granularity (i.e. hour, day, month)
    type: object
    required:
    - value
    - granularity
    properties:
      value:
        type: string
        example: '1981-06-01T00:00:00.000+02:00'
      granularity:
        type: string
        enum: [second, minute, hour, day, week, month, year]
        example: month

  new_word:
    description: A new word similar to an existing word.
    type: object
    required:
    - new_word
    - similar_to
    properties:
      new_word:
        type: string
        example: 'officewear'
      similar_to:
        type: string
        example: 'workwear'

  entity:
    description: An entity.
    type: object

  sentiment_detail:
    description: A sentiment value for text from index with length len. Value may range from -1.0 (very unhappy) to 1.0 (very happy).
    type: object
    required:
    - value
    - index
    - len
    properties:
      value:
        type: number
        example: 0.54
      index:
        type: number
        example: 0
      len:
        type: number
        example: 20

  sentiment:
    description: A sentiment value that may range from -1.0 (very unhappy) to 1.0 (very happy).
    type: object
    required:
    - value
    properties:
      value:
        type: number
        example: 0.54
      detail_list:
        description: A list with detailed sentiments on parts of the text..
        type: array
        items:
          $ref: "#/definitions/sentiment_detail"
