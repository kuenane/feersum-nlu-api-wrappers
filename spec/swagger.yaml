swagger: "2.0"

info:
  description: This is the HTTP API for Feersum NLU. See https://github.com/praekelt/feersum-nlu-api-wrappers for examples of how to use the API.
  version: 2.0.9
  title: FeersumNLU API
  contact:
    name: Feersum Engine
    url: https://www.feersum.io
    email: nlu@feersum.io

host: nlu.playground.feersum.io:443

basePath: /nlu/v2

schemes:
  - https

consumes:
- application/json
produces:
- application/json
  
# Global security (applies to all operations):
securityDefinitions:
   APIKeyHeader:
     type: apiKey
     in: header
     name: AUTH_TOKEN
security:
- APIKeyHeader: []

tags:
- name: dashboard
  description: A service endpoint to get your list of loaded model instances, the total API hits for each, API version, etc. This end-point my also be used to test if your service is available.
- name: text_classifiers
  description: The interface to your Naive Bayes text classifier model instances. A Naive Bayes text classifier model is useful for things like classifying phrases into predefined action or intent categories and may be trained by providing a number of example labeled phrases. Only whole word text features are exposed at the moment. To use a model of this type, first create one, provide training samples and train it up. Inference/predictions may then be made using the retrieve endpoint. 
- name: word_manifolds
  description: The interface to your word embedding model instances. Word embeddings are the language models used by the intent classifier, FAQ matcher as well as some entity extraction and language identification models. Note that the service is pre-loaded with default word embeddings which should be sufficient for most use cases.
- name: intent_classifiers
  description: The interface to your intent classifier model instances. An intent classifier is typically used to classify a user's utterance into a predefined action or intent category. Because it makes use of a word embedding language model and also matches text based on word similarity it would typically perform better than the Naive Bayes text classifier. To use a model of this type, first create one, provide training samples and train it up. Inference/predictions may then be made using the retrieve endpoint.
- name: faq_matchers
  description: Interface to your FAQ matcher/classifier model instances. An FAQ matcher is used to match a user's question to a list of predefined FAQs. Because it makes use of a word embedding language model and also matches text based on word similarity it would typically perform better than the Naive Bayes text classifier. To use a model of this type, first create one, provide training samples and train it up. Inference/predictions may then be made using the retrieve endpoint.
- name: lr4_language_recognisers
  description: The interface to your LR4 language recogniser model instances. LR4 loads pre-trained language recogniser models trained over a set of languages. An 'lid_za' model is available that was trained on all 11 South African languages.
- name: date_parsers
  description: The interface to your date parser model instances. Only one instance is supported and preloaded at the moment. Use the name 'generic' to call this instance. Also see the duckling entity extractor which includes durations and intervals.
- name: sentiment_detectors
  description: Interface to your sentiment detector model instances. Only one instance is supported and preloaded at the moment. Use the name 'generic' to call this instance.
- name: regex_entity_extractors
  description: Interface to your regular expression entity extractor instances.
- name: duckling_entity_extractors
  description: Interface to your duckling entity extractor instances. Duckling is an open source component that supports the extraction of dates, durations and intervals. It does support things like distances, volumes, etc., but these are not exposed at the moment.
- name: similarity_entity_extractors
  description: Interface to your word similarity entity extractor instances. A word embedding is used to find similar words.

paths:
###################################
###################################
########
## dashboard root
########
  /dashboard:
    get:
      tags:
      - dashboard
      summary: Your service dashboard.
      x-swagger-router-controller: rest_api.flask_server.controllers.dashboard_controller
      operationId: dashboard_get_details
      description: Get your list of loaded model instances, the total API hits for each, API version, etc.
      responses:
        200:
          $ref: "#/responses/dashboard_detail"
        400:
          description: bad request

###################################
###################################
########
## text_classifiers root
########
  /text_classifiers:
    post:
      tags:
      - text_classifiers
      summary: Create a text classifier.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_create
      description: Create a new text classifier or load one from the store. Returns the details of the new or loaded instance.
      parameters:
      - $ref: "#/parameters/body_param_text_clsfr_create_details"
      responses:
        200:
          $ref: "#/responses/text_clsfr_instance_detail"
        400:
          description: bad request
          
    get:
      tags:
      - text_classifiers
      summary: Get list of loaded text classifiers.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_get_details_all
      description: Get the list of loaded text classifiers.
      responses:
        200:
          $ref: "#/responses/text_clsfr_instance_detail_list"
        400:
          description: bad request

########
## text_classifiers Get details of named instance
########
  /text_classifiers/{instance_name}:
    get:
      tags:
      - text_classifiers
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_get_details
      description: Get the details of the named text classifier instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/text_clsfr_instance_detail"
        400:
          description: bad request

########
## text_classifiers training samples
########
  /text_classifiers/{instance_name}/training_samples:
    post:
      tags:
      - text_classifiers
      summary: Add training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_add_training_samples
      description: Add training samples to named text classifier. Returns the classifier's updated number of training samples.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_labelled_text_sample_list"
      responses:
        200:
          $ref: "#/responses/total_samples"        
        400:
          description: bad request
          
    get:
      tags:
      - text_classifiers
      summary: Get training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_get_training_samples
      description: Get the training samples of the named text classifier.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"        
        400:
          description: bad request

    delete:
      tags:
      - text_classifiers
      summary: Delete training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_del_training_samples
      description: Delete the training samples of the named text classifier. Returns the deleted samples.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"        
        400:
          description: bad request
########
## text_classifiers train
########
  /text_classifiers/{instance_name}/train:
    post:
      tags:
      - text_classifiers
      summary: Train the named text classifier.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_train
      description: Train the named text classifier with the training and testing data already provided. Returns the details of the model instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_train_details"
      responses:
        200:
          $ref: "#/responses/text_clsfr_instance_detail"
        400:
          description: bad request

########
## text_classifiers retrieve
########
  /text_classifiers/{instance_name}/retrieve:
    post:
      tags:
      - text_classifiers
      summary: Classify text.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_retrieve
      description: Classifies the text and returns a probability sorted list of classes.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/scored_labels"
        400:
          description: bad request

########
## text_classifiers get list of class labels
########
  /text_classifiers/{instance_name}/get_labels:
    get:
      tags:
      - text_classifiers
      summary: Get list of possible labels.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_get_labels
      description: Returns the classifier's list of possible class labels.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labels"
        400:
          description: bad request

########
## text_classifiers curation endpoint
########
  /text_classifiers/{instance_name}/curate:
    post:
      tags:
      - text_classifiers
      summary: Endpoint to aid in the curation of a model instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.text_classifiers_controller
      operationId: text_classifier_curate
      description: Returns the list of samples behind a cell of the confusion matrix of the training or testing samples.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_label_pair"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list" 
        400:
          description: bad request

###################################
###################################
########
## word_manifolds root
########
  /word_manifolds:
    post:
      tags:
      - word_manifolds
      summary: Create a word manifold model.
      x-swagger-router-controller: rest_api.flask_server.controllers.word_manifolds_controller
      operationId: word_manifold_create
      description: Create a new word manifold model using an input file or load a model from the store. Warning! - These models are quite big and each takes a few seconds to load/create. Returns the details of the new or loaded instance.
      parameters:
      - $ref: "#/parameters/body_param_wm_create_details"
      responses:
        200:
          $ref: "#/responses/wm_instance_detail"
        400:
          description: bad request
          
########
## word_manifolds vocab
########
  /word_manifolds/{instance_name}/vocab:
    post:
      tags:
      - word_manifolds
      summary: Add new words. 
      x-swagger-router-controller: rest_api.flask_server.controllers.word_manifolds_controller
      operationId: word_manifold_add_similar_words
      description: Add new words to the manifold that are similar to existing words and save the manifold. Warning! - Because this operation saves the updated word manifold to the store it could take a few seconds to complete. Returns the details of the updated instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_new_word_list"
      responses:
        200:
          $ref: "#/responses/wm_instance_detail"
        400:
          description: bad request
          
########
## word_manifolds similar_words
########
  /word_manifolds/{instance_name}/similar_words:
    post:
      tags:
      - word_manifolds
      summary: Find similar words. 
      x-swagger-router-controller: rest_api.flask_server.controllers.word_manifolds_controller
      operationId: word_manifold_get_similar_words
      description: Returns words from the manifold that are similar to the parameter word.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_word_and_threshold"
      responses:
        200:
          $ref: "#/responses/word_and_distance_list"
        400:
          description: bad request

########
## word_manifolds spell_correct
########
  /word_manifolds/{instance_name}/spell_correct:
    post:
      tags:
      - word_manifolds
      summary: Spell correct a word. 
      x-swagger-router-controller: rest_api.flask_server.controllers.word_manifolds_controller
      operationId: word_manifold_spell_correct
      description: Spell correct a word replacing it with the most likely word from the manifold. Returns one or more scored candidate words.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/word_and_distance_list"
        400:
          description: bad request

###################################
###################################
########
## intent_classifiers root
########
  /intent_classifiers:
    post:
      tags:
      - intent_classifiers
      summary: Create an intent classifier.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_create
      description: Create a new intent classifier or load one from the store. Returns the details of the new or loaded instance.
      parameters:
      - $ref: "#/parameters/body_param_create_details"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request
          
    get:
      tags:
      - intent_classifiers
      summary: Get list of loaded intent classifiers.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_get_details_all
      description: Returns the list of loaded intent classifiers.
      responses:
        200:
          $ref: "#/responses/instance_detail_list"
        400:
          description: bad request

########
## intent_classifiers Get details of named instance
########
  /intent_classifiers/{instance_name}:
    get:
      tags:
      - intent_classifiers
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_get_details
      description: Returns the details of the named intent classifier instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request

########
## intent_classifiers training samples
########
  /intent_classifiers/{instance_name}/training_samples:
    post:
      tags:
      - intent_classifiers
      summary: Add training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_add_training_samples
      description: Add training samples to named intent classifier. Returns the classifier's updated number of training samples.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_labelled_text_sample_list"
      responses:
        200:
          $ref: "#/responses/total_samples"        
        400:
          description: bad request
          
    get:
      tags:
      - intent_classifiers
      summary: Get training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_get_training_samples
      description: Returns the training samples of the named intent classifier.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"        
        400:
          description: bad request

    delete:
      tags:
      - intent_classifiers
      summary: Delete training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_del_training_samples
      description: Delete the training samples of the named intent classifier. Returns the deleted samples.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"        
        400:
          description: bad request
########
## intent_classifiers train
########
  /intent_classifiers/{instance_name}/train:
    post:
      tags:
      - intent_classifiers
      summary: Train the named intent classifier.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_train
      description: Train the named intent classifier with the training and testing data already provided. Returns the updated instance details.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_train_details"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request

########
## intent_classifiers train online
########
  /intent_classifiers/{instance_name}/online_training_samples:
    post:
      tags:
      - intent_classifiers
      summary: Train/update the classifier online with the samples provided.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_online_training_samples
      description: Train/update the classifier online with the samples provided. This operation is more efficient than a full re-train. Returns the classifier's updated number of training samples.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_labelled_text_sample_list"
      responses:
        200:
          $ref: "#/responses/total_samples"        
        400:
          description: bad request

########
## intent_classifiers retrieve
########
  /intent_classifiers/{instance_name}/retrieve:
    post:
      tags:
      - intent_classifiers
      summary: Classify intent.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_retrieve
      description: Classifies the intent and returns a probability sorted list of classes.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/scored_labels"
        400:
          description: bad request

########
## intent_classifiers get list of class labels
########
  /intent_classifiers/{instance_name}/get_labels:
    get:
      tags:
      - intent_classifiers
      summary: Get list of possible labels.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_get_labels
      description: Returns the classifier's list of possible class labels.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labels"
        400:
          description: bad request

########
## intent_classifiers curation endpoint
########
  /intent_classifiers/{instance_name}/curate:
    post:
      tags:
      - intent_classifiers
      summary: Endpoint to aid in the curation of a model instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.intent_classifiers_controller
      operationId: intent_classifier_curate
      description: Returns the list of samples behind a cell of the confusion matrix of the training or testing samples.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_label_pair"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list" 
        400:
          description: bad request


###################################
###################################
########
## FAQ matchers root
########
  /faq_matchers:
    post:
      tags:
      - faq_matchers
      summary: Create an FAQ matcher.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_create
      description: Create a new faq matcher or load one from the store. Returns the details of the new or loaded instance.
      parameters:
      - $ref: "#/parameters/body_param_create_details"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request
          
    get:
      tags:
      - faq_matchers
      summary: Get list of loaded FAQ matchers.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_get_details_all
      description: Returns the list of loaded faq matchers.
      responses:
        200:
          $ref: "#/responses/instance_detail_list"
        400:
          description: bad request

########
## faq_matchers Get details of named instance
########
  /faq_matchers/{instance_name}:
    get:
      tags:
      - faq_matchers
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_get_details
      description: Get the details of the named FAQ matcher instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request

########
## faq_matchers training samples
########
  /faq_matchers/{instance_name}/training_samples:
    post:
      tags:
      - faq_matchers
      summary: Add training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_add_training_samples
      description: Add training samples to named faq matcher. Returns the FAQ matcher's updated number of training samples.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_labelled_text_sample_list"
      responses:
        200:
          $ref: "#/responses/total_samples"        
        400:
          description: bad request
          
    get:
      tags:
      - faq_matchers
      summary: Get training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_get_training_samples
      description: Returns the training samples of the named faq matcher.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"        
        400:
          description: bad request

    delete:
      tags:
      - faq_matchers
      summary: Delete training samples.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_del_training_samples
      description: Delete the training samples of the named FAQ matcher. Returns the deleted samples.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list"        
        400:
          description: bad request
          
########
## faq_matchers train
########
  /faq_matchers/{instance_name}/train:
    post:
      tags:
      - faq_matchers
      summary: Train the named FAQ matcher.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_train
      description: Train the named FAQ matcher with the training and testing data already provided. Returns the updated instance detail.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_train_details"
      responses:
        200:
          $ref: "#/responses/instance_detail"
        400:
          description: bad request

########
## faq_matchers train online
########
  /faq_matchers/{instance_name}/online_training_samples:
    post:
      tags:
      - faq_matchers
      summary: Train/update the classifier online with the samples provided.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_online_training_samples
      description: Train/update the classifier online with the samples provided. This operation is more efficient than a full re-train. Returns the classifier's updated number of training samples.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_labelled_text_sample_list"
      responses:
        200:
          $ref: "#/responses/total_samples"        
        400:
          description: bad request
          
########
## faq_matchers retrieve
########
  /faq_matchers/{instance_name}/retrieve:
    post:
      tags:
      - faq_matchers
      summary: Match retrieve and FAQ.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_retrieve
      description: Matchers the FAQ and returns a probability sorted list of answer labels.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/scored_labels"
        400:
          description: bad request

########
## faq_matchers get list of class labels
########
  /faq_matchers/{instance_name}/get_labels:
    get:
      tags:
      - faq_matchers
      summary: Get list of possible labels.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_get_labels
      description: Returns the classifier's list of possible class labels.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labels"
        400:
          description: bad request

########
## faq_matchers curation endpoint
########
  /faq_matchers/{instance_name}/curate:
    post:
      tags:
      - faq_matchers
      summary: Endpoint to aid in the curation of a model instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.faq_matchers_controller
      operationId: faq_matcher_curate
      description: Returns the list of samples behind a cell of the confusion matrix of the training or testing samples.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_label_pair"
      responses:
        200:
          $ref: "#/responses/labelled_text_sample_list" 
        400:
          description: bad request


###################################
###################################
########
## Extract a list of dates from the text input.
########
  /date_parsers/{instance_name}/retrieve:
    post:
      tags:
      - date_parsers
      summary: Extract dates.
      x-swagger-router-controller: rest_api.flask_server.controllers.date_parsers_controller
      operationId: date_parser_retrieve
      description: Parses one or more dates from text.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/date_list"
        400:
          description: bad request

###################################
###################################
########
## Detect the sentiment of the text input.
########
  /sentiment_detectors/{instance_name}/retrieve:
    post:
      tags:
      - sentiment_detectors
      summary: Detect sentiment.
      x-swagger-router-controller: rest_api.flask_server.controllers.sentiment_detectors_controller
      operationId: sentiment_detector_retrieve
      description: Detect the general sentiment in the input text.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/sentiment"
        400:
          description: bad request
       
###################################
###################################
########
## regex_entity_extractors root
########
  /regex_entity_extractors:
    post:
      tags:
      - regex_entity_extractors
      summary: Create a regular expression entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.regex_entity_extractors_controller
      operationId: regex_entity_extractor_create
      description: Create a new regular expression entity extractor or load one from the store.
      parameters:
      - $ref: "#/parameters/body_param_regex_ent_create_details"
      responses:
        200:
          $ref: "#/responses/regex_instance_detail"
        400:
          description: bad request
          
    get:
      tags:
      - regex_entity_extractors
      summary: Get list of loaded regular expression entity extractors.
      x-swagger-router-controller: rest_api.flask_server.controllers.regex_entity_extractors_controller
      operationId: regex_entity_extractor_get_details_all
      description: Get the list of loaded regular expression entity extractors.
      responses:
        200:
          $ref: "#/responses/regex_instance_detail_list"
        400:
          description: bad request

########
## regex_entity_extractors Get details of named instance
########
  /regex_entity_extractors/{instance_name}:
    get:
      tags:
      - regex_entity_extractors
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.regex_entity_extractors_controller
      operationId: regex_entity_extractor_get_details
      description: Get the details of the named regular expression entity extractor instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/regex_instance_detail"
        400:
          description: bad request

########
## regex_entity_extractors retrieve
########
  /regex_entity_extractors/{instance_name}/retrieve:
    post:
      tags:
      - regex_entity_extractors
      summary: Extract information based on the regular expression.
      x-swagger-router-controller: rest_api.flask_server.controllers.regex_entity_extractors_controller
      operationId: regex_entity_extractor_retrieve
      description: Extract the entities matching the regular expression.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/entity_list"
        400:
          description: bad request

###################################
###################################
########
## duckling_entity_extractors root
########
  /duckling_entity_extractors:
    post:
      tags:
      - duckling_entity_extractors
      summary: Create a duckling entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.duckling_entity_extractors_controller
      operationId: duckling_entity_extractor_create
      description: Create a new duckling entity extractor or load one from the store.
      parameters:
      - $ref: "#/parameters/body_param_duckling_ent_create_details"
      responses:
        200:
          $ref: "#/responses/duckling_instance_detail"
        400:
          description: bad request
          
    get:
      tags:
      - duckling_entity_extractors
      summary: Get list of loaded regular expression entity extractors.
      x-swagger-router-controller: rest_api.flask_server.controllers.duckling_entity_extractors_controller
      operationId: duckling_entity_extractor_get_details_all
      description: Get the list of loaded duckling entity extractors.
      responses:
        200:
          $ref: "#/responses/duckling_instance_detail_list"
        400:
          description: bad request

########
## duckling_entity_extractors Get details of named instance
########
  /duckling_entity_extractors/{instance_name}:
    get:
      tags:
      - duckling_entity_extractors
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.duckling_entity_extractors_controller
      operationId: duckling_entity_extractor_get_details
      description: Get the details of the named duckling entity extractor instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/duckling_instance_detail"
        400:
          description: bad request

########
## duckling_entity_extractors retrieve
########
  /duckling_entity_extractors/{instance_name}/retrieve:
    post:
      tags:
      - duckling_entity_extractors
      summary: Extract information based on the regular expression.
      x-swagger-router-controller: rest_api.flask_server.controllers.duckling_entity_extractors_controller
      operationId: duckling_entity_extractor_retrieve
      description: Extract the entities parsed by duckling.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/entity_list"
        400:
          description: bad request

###################################
###################################
########
## similarity_entity_extractors root
########
  /similarity_entity_extractors:
    post:
      tags:
      - similarity_entity_extractors
      summary: Create a word similarity entity extractor.
      x-swagger-router-controller: rest_api.flask_server.controllers.similarity_entity_extractors_controller
      operationId: similarity_entity_extractor_create
      description: Create a new word similarity entity extractor or load one from the store.
      parameters:
      - $ref: "#/parameters/body_param_similarity_ent_create_details"
      responses:
        200:
          $ref: "#/responses/similarity_instance_detail"
        400:
          description: bad request
          
    get:
      tags:
      - similarity_entity_extractors
      summary: Get list of loaded similarity entity extractors.
      x-swagger-router-controller: rest_api.flask_server.controllers.similarity_entity_extractors_controller
      operationId: similarity_entity_extractor_get_details_all
      description: Get the list of loaded similarity entity extractors.
      responses:
        200:
          $ref: "#/responses/similarity_instance_detail_list"
        400:
          description: bad request

########
## similarity_entity_extractors Get details of named instance
########
  /similarity_entity_extractors/{instance_name}:
    get:
      tags:
      - similarity_entity_extractors
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.similarity_entity_extractors_controller
      operationId: similarity_entity_extractor_get_details
      description: Get the details of the named similarity entity extractor instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/similarity_instance_detail"
        400:
          description: bad request

########
## similarity_entity_extractors retrieve
########
  /similarity_entity_extractors/{instance_name}/retrieve:
    post:
      tags:
      - similarity_entity_extractors
      summary: Extract information based on word similarity.
      x-swagger-router-controller: rest_api.flask_server.controllers.similarity_entity_extractors_controller
      operationId: similarity_entity_extractor_retrieve
      description: Extract the word entities that are similar to the list of words used to create this model instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/entity_list"
        400:
          description: bad request

###################################
###################################
########
## lr4_language_recognisers root
########
  /lr4_language_recognisers:
    post:
      tags:
      - lr4_language_recognisers
      summary: Create a LR4 text language detector.
      x-swagger-router-controller: rest_api.flask_server.controllers.lr4_language_recognisers_controller
      operationId: lr4_language_recogniser_create
      description: Create a new LR4 language detector from the pre-trained model name provided. 'lid_za' is currently the only pre-trained model that is available, but it was trained on all 11 languages and is pretty accurate. Returns the detail of the new instance.
      parameters:
      - $ref: "#/parameters/body_param_lr4_create_details"
      responses:
        200:
          $ref: "#/responses/lr4_instance_detail"
        400:
          description: bad request
          
    get:
      tags:
      - lr4_language_recognisers
      summary: Get list of loaded LR4 text language detectors.
      x-swagger-router-controller: rest_api.flask_server.controllers.lr4_language_recognisers_controller
      operationId: lr4_language_recogniser_get_details_all
      description: Get the list of loaded LR4 text language detectors.
      responses:
        200:
          $ref: "#/responses/lr4_instance_detail_list"
        400:
          description: bad request

########
## lr4_language_recognisers Get details of named instance
########
  /lr4_language_recognisers/{instance_name}:
    get:
      tags:
      - lr4_language_recognisers
      summary: Get details of named instance.
      x-swagger-router-controller: rest_api.flask_server.controllers.lr4_language_recognisers_controller
      operationId: lr4_language_recogniser_get_details
      description: Get the details of the named LR4 text language detector instance.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/lr4_instance_detail"
        400:
          description: bad request

########
## lr4_language_recognisers retrieve
########
  /lr4_language_recognisers/{instance_name}/retrieve:
    post:
      tags:
      - lr4_language_recognisers
      summary: Recognise the language the text is written in.
      x-swagger-router-controller: rest_api.flask_server.controllers.lr4_language_recognisers_controller
      operationId: lr4_language_recogniser_retrieve
      description: Recognise the language the text is written in. Returns the list of scored language codes.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      - $ref: "#/parameters/body_param_text_input"
      responses:
        200:
          $ref: "#/responses/scored_labels"
        400:
          description: bad request

########
## lr4_language_recognisers get list of class labels
########
  /lr4_language_recognisers/{instance_name}/get_labels:
    get:
      tags:
      - lr4_language_recognisers
      summary: Get list of possible labels.
      x-swagger-router-controller: rest_api.flask_server.controllers.lr4_language_recognisers_controller
      operationId: lr4_language_recogniser_get_labels
      description: Returns the classifier's list of possible class labels.
      parameters:
      - $ref: "#/parameters/path_param_instance_name"
      responses:
        200:
          $ref: "#/responses/labels"
        400:
          description: bad request

###################################
# Descriptions of common parameters
###################################
parameters:
  path_param_instance_name:
    in: path
    name: instance_name
    description: The name of the model instance.
    required: true
    type: string

  body_param_new_word_list:
    in: body
    name: new_word_list
    description: List of new words.
    required: true
    schema:
      $ref: "#/definitions/new_word_list"
          
  body_param_text_clsfr_create_details:
    in: body
    name: text_clsfr_create_details
    description: The details of the instance to create.
    required: true
    schema:
      $ref: "#/definitions/text_clsfr_create_details"
          
  body_param_create_details:
    in: body
    name: create_details
    description: The details of the instance to create.
    required: true
    schema:
      $ref: "#/definitions/create_details"
          
  body_param_wm_create_details:
    in: body
    name: wm_create_details
    description: The details of the word manifold instance to create.
    required: true
    schema:
      $ref: "#/definitions/wm_create_details"
          
  body_param_label_pair:
    in: body
    name: label_pair
    description: The true label, predicted label and matrix (train/test) to use.
    required: true
    schema:
      $ref: "#/definitions/class_label_pair"

  body_param_word_and_threshold:
    in: body
    name: word_and_threshold
    description: A word token and an accompanying threshold.
    required: true
    schema:
      $ref: "#/definitions/word_and_threshold"

  body_param_regex_ent_create_details:
    in: body
    name: regex_ent_create_details
    description: The details of the instance to create.
    required: true
    schema:
      $ref: "#/definitions/regex_ent_create_details"
          
  body_param_duckling_ent_create_details:
    in: body
    name: duckling_ent_create_details
    description: The details of the instance to create.
    required: true
    schema:
      $ref: "#/definitions/duckling_ent_create_details"

  body_param_similarity_ent_create_details:
    in: body
    name: similarity_ent_create_details
    description: The details of the instance to create.
    required: true
    schema:
      $ref: "#/definitions/similarity_ent_create_details"

  body_param_lr4_create_details:
    in: body
    name: lr4_create_details
    description: The details of the instance to create.
    required: true
    schema:
      $ref: "#/definitions/lr4_create_details"
          
  body_param_labelled_text_sample_list:
    in: body
    name: labelled_text_sample_list
    description: List of labelled text samples.
    required: true
    schema:
      $ref: "#/definitions/labelled_text_sample_list"
    
  body_param_train_details:        
    in: body
    name: train_details
    description: The arguments provided to the train operation.
    required: true
    schema:
      $ref: "#/definitions/train_details"
          
  body_param_text_input:
    in: body
    name: text_input
    description: The input text.
    required: true
    schema:
      $ref: "#/definitions/text_input"

##################################
# Descriptions of common responses
##################################
responses:
  dashboard_detail:
    description: Your dashboard content.
    schema:
      $ref: "#/definitions/dashboard_detail"
      
  text_clsfr_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/text_clsfr_instance_detail"
      
  text_clsfr_instance_detail_list:
    description: A list of models' instance details
    schema:
      $ref: "#/definitions/text_clsfr_instance_detail_list"
      
  wm_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/wm_instance_detail"
      
  wm_instance_detail_list:
    description: A list of models' instance details
    schema:
      $ref: "#/definitions/wm_instance_detail_list"
      
  instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/instance_detail"
      
  instance_detail_list:
    description: A list of models' instance details
    schema:
      $ref: "#/definitions/instance_detail_list"
      
  regex_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/regex_instance_detail"
      
  regex_instance_detail_list:
    description: A list of models' instance details
    schema:
      $ref: "#/definitions/regex_instance_detail_list"
      
  duckling_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/duckling_instance_detail"
      
  duckling_instance_detail_list:
    description: A list of models' instance details
    schema:
      $ref: "#/definitions/duckling_instance_detail_list"
      
  similarity_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/similarity_instance_detail"
      
  similarity_instance_detail_list:
    description: A list of models' instance details
    schema:
      $ref: "#/definitions/similarity_instance_detail_list"
      
  lr4_instance_detail:
    description: The model instance detail
    schema:
      $ref: "#/definitions/lr4_instance_detail"
      
  lr4_instance_detail_list:
    description: A list of models' instance details
    schema:
      $ref: "#/definitions/lr4_instance_detail_list"

  total_samples:
    description: The total number of samples of this type in the model.
    schema:
      $ref: "#/definitions/total_samples"

  labelled_text_sample_list:
    description: The list of labeled text samples.
    schema:
      $ref: "#/definitions/labelled_text_sample_list"
      
  word_and_distance_list:
    description: A list of words with distances.
    schema:
      $ref: "#/definitions/word_and_distance_list"

  scored_labels:
    description: The list of scored and sorted labels.
    schema:
      $ref: "#/definitions/scored_label_list"

  labels:
    description: The list of possible labels.
    schema:
      $ref: "#/definitions/class_label_list"

  entity_list:
    description: The list of extracted entities.
    schema:
      $ref: "#/definitions/entity_list"

  date_list:                  
    description: The list of structured dates.
    schema:
      $ref: "#/definitions/date_list"

  sentiment:                  
    description: The coarse sentiment.
    schema:
      $ref: "#/definitions/sentiment"

####################################
# Descriptions of common definitions
####################################
definitions:
  dashboard_model_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - model_type
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance. 
        type: string
        example: example_instance
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: This is an example of this type of model.
      peak_api_hit_rate:
        description: The peak api hit rate (hits/s) over the last couple of window periods. A window period is in the order of 5 minutes.
        type: number
        example: 0.5
      model_type:
        description: The type of this model.
        type: string
        example: faq_matcher

  dashboard_detail:
    description: Your dashboard content.
    type: object
    required:
    - api_version
    - service_name
    - peak_api_hit_rate
    - model_list
    properties:
      api_version:
        description: The version of the http api.
        type: string
        example: 2.0.1
      service_name:
        description: The details of this service.
        type: string
        example: FeersumNLU playground.
      peak_api_hit_rate:
        description: The peak api hit rate (hits/s) over the last couple of window periods. A window period is in the order of 5 minutes.
        type: number
        example: 0.5
      model_list:
        description: A list of models' instance details.
        type: array
        items:
          $ref: "#/definitions/dashboard_model_detail"

  text_clsfr_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance. 
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'This is an example of this type of model.'
      training_accuracy:
        description: The accuracy of the model as measured on the training set. 
        type: number
        example: 1.0
      training_f1:
        description: The average F-score of the model as measured on the training set. 
        type: number
        example: 1.0
      training_stamp:
        description: The time when the training operation concluded.
        type: string
        example: '2017-10-26 10:42:01.589979'
      training_cm:
        description: The confusion matrix as measured on the training set. The matrix is expected to be quite sparse so a compact dict of dicts representation is used.
        type: object
      cm_labels:
        description: A dict that, if present, maps from the confusion matrix row and column labels to longer more descriptive labels. For example, if present it maps an FAQ answer ID to the string answer which may be either a label or the full text answer.
        type: object

  text_clsfr_instance_detail_list:
    description: A list of models' instance details.
    type: array
    items:
      $ref: "#/definitions/text_clsfr_instance_detail"
      
  wm_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance. 
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'This is an example of this type of model.'
      word_vectors_file:
        description: The input file on the server (if any) to use. 
        type: string
        example: 'glove_za_eng.txt'

  wm_instance_detail_list:
    description: A list of models' instance details.
    type: array
    items:
      $ref: "#/definitions/wm_instance_detail"

  instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance. 
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'This is an example of this type of model.'
      training_accuracy:
        description: The accuracy of the model as measured on the training set. 
        type: number
        example: 1.0
      training_f1:
        description: The average F-score of the model as measured on the training set. 
        type: number
        example: 1.0
      training_stamp:
        description: The time when the training operation concluded.
        type: string
        example: '2017-10-26 10:42:01.589979'
      training_cm:
        description: The confusion matrix as measured on the training set. The matrix is expected to be quite sparse so a compact dict of dicts representation is used.
        type: object
      cm_labels:
        description: A dict that, if present, maps from the confusion matrix row and column labels to longer more descriptive labels. For example, if present it maps an FAQ answer ID to the string answer which may be either a label or the full text answer.
        type: object
      word_manifold_list:
        description: The list of labelled word manifolds used for training.
        type: array
        items:
          $ref: "#/definitions/labeled_word_manifold"
      threshold:
        description: There is typically some model dependent threshold to be set upon training and which is possibly mutable post training. This is that threshold.
        type: number
        example: 0.85

  instance_detail_list:
    description: A list of models' instance details.
    type: array
    items:
      $ref: "#/definitions/instance_detail"

  regex_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    - regex
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance. 
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      regex:
        description: The regular expression i.e. '(?P<license>([A-Z]{3}[ ]?[0-9]{3}[ ]?(GP|NW|MP|EC|L|NC|NW)))'
        type: string
        example: '(?P<license>([A-Z]{3}[ ]?[0-9]{3}[ ]?(GP|NW|MP|EC|L|NC|NW)))'

  regex_instance_detail_list:
    description: A list of models' instance details.
    type: array
    items:
      $ref: "#/definitions/regex_instance_detail"
      
  duckling_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance. 
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'

  duckling_instance_detail_list:
    description: A list of models' instance details.
    type: array
    items:
      $ref: "#/definitions/duckling_instance_detail"

  similarity_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    - similar_words
    - threshold
    - word_manifold
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance. 
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      similar_words:
        description: The list of similar words to test against.
        type: array
        items:
          type: string
          example: 'cat'
      threshold:
        description: The threshold below which words are not similar.
        type: number
        example: 0.65
      word_manifold:
        description: The word manifold used to measure word similarity.
        type: string
        example: 'feers_wm_eng'

  similarity_instance_detail_list:
    description: A list of models' instance details.
    type: array
    items:
      $ref: "#/definitions/similarity_instance_detail"

  lr4_instance_detail:
    description: The model instance detail.
    type: object
    required:
    - name
    - id
    - lid_model_file
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance. 
        type: string
        example: 'example_instance'
      id:
        description: The unique id of a specific version of the model instance.
        type: string
        example: '7986d2ef-0b98-4c91-b847-7b66110e2f61'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      lid_model_file:
        description: The pre-trained model this instance was created from.
        type: string
        example: 'lid_za'

  lr4_instance_detail_list:
    description: A list of models' instance details.
    type: array
    items:
      $ref: "#/definitions/lr4_instance_detail"

  text_clsfr_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance. 
        type: string
        example: 'example_instance'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the model store. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False
        
  create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance. 
        type: string
        example: 'example_instance'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      lid_model_file:
        description: The pre-trained LID model to load.
        type: string
        example: 'lid_za'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the model store. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False
        
  wm_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance. 
        type: string
        example: 'example_instance'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the model store. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False
      word_vectors_file:
        description: The input file on the server (if any) to use. 
        type: string
        example: 'glove_za_eng.txt'

  regex_ent_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance to create. 
        type: string
        example: 'example_instance'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example model of this type.'
      regex:
        description: The regular expression.
        type: string
        example: '(?P<license>([A-Z]{3}[ ]?[0-9]{3}[ ]?(GP|NW|MP|EC|L|NC|NW)))'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the model store. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False

  duckling_ent_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance to create. 
        type: string
        example: 'example_instance'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'This is an example of this type of model.'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the model store. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False

  similarity_ent_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - load_from_store
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance to create. 
        type: string
        example: 'example_instance'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model'
      similar_words:
        type: array
        items:
          type: string
          example: 'cat'
      threshold:
        description: The threshold below which words are not similar.
        type: number
        example: 0.65
      word_manifold:
        type: string
        example: 'feers_wm_eng'
      load_from_store:
        description: Indicates if a pre-existing model with the specified name should be loaded from the model store. Usually set to False in which case a new model is created with details as specified.
        type: boolean
        example: False

  lr4_create_details:
    description: The details of the model instance to create.
    type: object
    required:
    - name
    - lid_model_file
    properties:
      name:
        description: The sluggy-url-friendly-name of the instance to create. 
        type: string
        example: 'example_instance'
      desc:
        description: The longer existential description of this instance's purpose in life.
        type: string
        example: 'An example of this type of model.'
      lid_model_file:
        description: The pre-trained LID model to load.
        type: string
        example: 'lid_za'

  labelled_text_sample:
    description: Labelled text sample.
    type: object
    required:
      - text
      - label
    properties:
      text:
        type: string
        example: 'Hello, my name is Tom.'
      label:
        type: string
        example: 'greeting'

  labelled_text_sample_list:
    description: List of labelled text samples.
    type: array
    items:
      $ref: "#/definitions/labelled_text_sample"

  labeled_word_manifold:  
    description: A labelled (e.g. lang_code labelled) word manifold instance.
    type: object
    required:
    - label
    - word_manifold
    properties:
      label:
        description: The language code label.
        type: string
        example: 'eng'
      word_manifold:
        description: The name of the word manifold to use for the language code.
        type: string
        example: 'feers_wm_eng'

  train_details:
    description: The parameters provided to the train operation.
    type: object
    required:
      - immediate_mode
    properties:
      immediate_mode:
        description: Causes the API call to be blocking and return only once training is complete. Forced to true in the current implementation.
        type: boolean
        example: True
      threshold:
        description: There is typically some model dependent threshold to be set upon training which is possibly mutable post training. This is that threshold.
        type: number
        example: 0.85
      word_manifold:
        description: |
          The word manifold instance to use for training and later inference. 
          
          Rather use the word_manifold_list for supplying a language labelled list of word manifold instances to use in a multi-language system.
        type: string
        example: 'feers_wm_eng'
      word_manifold_list:
        description: The list of labelled word manifolds to use for training.
        type: array
        items:
          $ref: "#/definitions/labeled_word_manifold"

  total_samples:
    description: The total number of samples of this type now loaded into the model.
    type: object
    required:
    - total_samples
    properties:
      total_samples:
        type: integer
        example: 4

  text_input:     
    description: The text input to be classified, matched or parsed.
    type: object
    required:
    - text
    properties:
      text:
        type: string
        example: 'Hi, you may call me Tom.'

  word_and_threshold:  
    description: A word and a threshold.
    type: object
    required:
    - word
    - threshold
    properties:
      word:
        type: string
        example: 'cat'
      threshold:
        type: number
        example: 0.75

  word_and_distance:  
    description: A word and a distance.
    type: object
    required:
    - word
    - distance
    properties:
      word:
        type: string
        example: 'cat'
      distance:
        type: number
        example: 0.75

  scored_label:  
    description: A class label with an associated probablity.
    type: object
    required:
    - label
    - probability
    properties:
      label:
        type: string
        example: 'greeting'
      probability:
        type: number
        example: 0.95

  scored_label_list:  
    description: A list of scored and sorted class labels.
    type: array
    items:
      $ref: "#/definitions/scored_label"
      
  word_and_distance_list:  
    description: A list of words with distances.
    type: array
    items:
      $ref: "#/definitions/word_and_distance"

  class_label:  
    description: A class label.
    type: string
    example: 'greeting'

  class_label_list:  
    description: A list of possible class labels.
    type: array
    items:
      $ref: "#/definitions/class_label"

  class_label_pair:
    description: The ground truth label, predicted label and matrix (train/test) to use.
    type: object
    required:
      - true_label
      - predicted_label
      - matrix_name
    properties:
      true_label:
        type: string
        example: 'greeting'
      predicted_label:
        type: string
        example: 'question'
      matrix_name:
        description: The confusion matrix to use. Should be either 'train' or 'test' which refers to the confusion matrix of the training data or the testing data respectively.
        type: string
        example: 'train'

  date:
    description: A structured date-time string with a best guess on the specificity/granularity (i.e. hour, day, month)
    type: object
    required:
    - date
    - granularity
    properties:
      date:
        type: string
        example: '1981-06-01T00:00:00.000+02:00'
      granularity:
        type: string
        enum: [second, minute, hour, day, week, month, year]
        example: month

  date_list:   
    description: A list of structured date-time strings.
    type: array
    items:
      $ref: "#/definitions/date"
      
  new_word:
    description: A new word similar to an existing word.
    type: object
    required:
    - new_word
    - similar_to
    properties:
      new_word:
        type: string
        example: 'officewear'
      similar_to:
        type: string
        example: 'workwear'

  new_word_list:   
    description: A list of new words.
    type: array
    items:
      $ref: "#/definitions/new_word"

  entity:
    description: An entity.
    type: object

  entity_list:   
    description: A list of entities.
    type: array
    items:
      $ref: "#/definitions/entity"

  sentiment:   
    description: A sentiment value that may range from -1.0 (very UNhappy) to 1.0 (very happy).
    type: object
    required:
    - value
    properties:
      value:
        type: number
        example: 0.54